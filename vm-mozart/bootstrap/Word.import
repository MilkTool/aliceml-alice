(* -*- sml -*- *)

import

signature WORD =
    sig
	type word = word

	val fromInt : int -> word
	val fromLargeInt : int -> word
	val toInt : word -> int
	val toLargeInt : word -> LargeInt.int
	val toIntX : word -> int
	val orb : word * word -> word
	val xorb : word * word -> word
	val andb : word * word -> word
	val notb : word * word -> word
	val op<< : word * word -> word
	val op>> : word * word -> word
	val op~>> : word * word -> word
	val toString : word -> string
	val op>= : word * word -> bool
	val fromLargeWord : word -> word
	val toLargeWord : word -> word
	val scan :
	    StringCvt.radix -> (char, 'a) StringCvt.reader ->
	    (word, 'a) StringCvt.reader
    end

structure Word: WORD

structure LargeWord: WORD

from "../Word.ozf"
