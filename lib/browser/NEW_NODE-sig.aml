(*
 * Authors:
 *   Bernadette Blum <blum@ps.uni-sb.de>
 *   Marvin Schiller <schiller@ps.uni-sb.de>
 *
 * Copyright:
 *   Bernadette Blum, 2002
 *   Marvin Schiller, 2002
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

import structure Inf from "x-alice:/lib/rtt/Inf"
import structure Type from "x-alice:/lib/rtt/Type"
import structure Reflect from "x-alice:/lib/system/Reflect"
import structure Types from "Types"

local

open Types 

in

signature NEW_NODE =
sig
    
    (* interne Repraesentation von Werten (ausser Strukturen) *)

    val newNode: 'a * Type.t -> node

    val createGraph: Reflect.value * Type.t  * node * int * int -> node 

    (* interne Repraesentation von Strukturen *)

    val newNodeInf: 'a * Inf.t -> Types.node

    val createGraphInf: Reflect.module * Inf.t  * node * int * int -> node

end

end
