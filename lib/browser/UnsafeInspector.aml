(*
 * Authors:
 *   Bernadette Blum <blum@ps.uni-sb.de>
 *   Marvin Schiller <schiller@ps.uni-sb.de>
 *
 * Copyright:
 *   Bernadette Blum, 2002
 *   Marvin Schiller, 2002
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

import structure Types from "Types"
import structure Helper from "Helper"
import structure NewNode from "NewNode"
import structure Layout from "Layout" 
import structure Window from "Window"
import structure DrawNodes from "DrawNodes"
import structure Settings from "Settings"
import structure Init from "Init"
import signature UNSAFE_INSPECTOR from "UNSAFE_INSPECTOR-sig"

structure UnsafeInspector :> UNSAFE_INSPECTOR = 
struct
    	       
    (* inspect *)
    fun inspect (v,t) = 
	let 
	    val _ = Window.stopButtonSetActive(true)
	    val n = NewNode.newNode(v,t)
	in
	    ( Layout.layout(n)
	     ;  DrawNodes.draw(n,0,
			       !Window.act_line
			       ,false)
	     ; Window.incr_act_line
	     (Helper.get_ydim(n) + 1)
	     ; Layout.setVisible(Helper.get_xdim(n),Helper.get_ydim(n)+1)
	     ; (!Window.resize())
	     ; Window.show ()
	     ; Window.stopButtonSetActive(false))
	end
    
    (* inspectInf *)
    and inspectInf (v,t) = 
	let 
	    val _ = Window.stopButtonSetActive(true)
	    val n = NewNode.newNodeInf(v,t)
	in  ( Layout.layout(n)
	     ;  DrawNodes.draw(n,0,!Window.act_line
			       , false)
	     ; Window.incr_act_line
	     (Helper.get_ydim(n) + 1)
	     ; Layout.setVisible(Helper.get_xdim(n),Helper.get_ydim(n)+1)
	     ; (!Window.resize())
	     ; (Window.show) ()
	     ; Window.stopButtonSetActive(false))
	end 

    val _  = Init.init ()

end
