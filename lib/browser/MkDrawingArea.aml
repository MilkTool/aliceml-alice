(*
 * Authors:
 *   Bernadette Blum <blum@ps.uni-sb.de>
 *   Marvin Schiller <schiller@ps.uni-sb.de>
 *
 * Copyright:
 *   Bernadette Blum, 2002
 *   Marvin Schiller, 2002
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)
import structure Gtk from "x-alice:/lib/gtk/Gtk"
import structure GtkCanvas from "x-alice:/lib/gtk/GtkCanvas"
import structure MkColorTable from "MkColorTable"
import signature DRAWING_AREA from "DRAWING_AREA-sig"

functor MkDrawingArea (val xsize : real val ysize: real) : DRAWING_AREA
=
struct

    type tag = Gtk.object
    val canvas =  GtkCanvas.new 0
	
    val _ =  (Gtk.widgetSetUsize(canvas, Real.trunc xsize, Real.trunc ysize ) 
	      ;GtkCanvas.setScrollRegion (canvas,0.0,0.0,xsize,ysize))

    val background =  GtkCanvas.itemNew 
		      ( GtkCanvas.root(canvas), 
		       GtkCanvas.RECTANGLE,
		       [("x1", Gtk.DOUBLE 0.0),
			("y1", Gtk.DOUBLE 0.0),
			("x2", Gtk.DOUBLE xsize),
			("y2", Gtk.DOUBLE ysize),
			("fill_color_gdk", 
		       Gtk.OBJECT(MkColorTable.allocColor(65535,65535,65535))),
			("outline_color_gdk", 
			 Gtk.OBJECT (MkColorTable.allocColor(0,0,0)))]) 

    val root = GtkCanvas.root(canvas)
  
    fun resize (x,y) = (GtkCanvas.setScrollRegion(canvas,0.0,0.0,x,y)
	               ;GtkCanvas.itemSet(background,"x2", Gtk.DOUBLE x)
	               ;GtkCanvas.itemSet(background,"y2", Gtk.DOUBLE y))	

end


    
