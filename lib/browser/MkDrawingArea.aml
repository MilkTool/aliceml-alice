(*
 * Authors:
 *   Bernadette Blum <blum@ps.uni-sb.de>
 *   Marvin Schiller <schiller@ps.uni-sb.de>
 *
 * Copyright:
 *   Bernadette Blum, 2002
 *   Marvin Schiller, 2002
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

import structure Inspector from "x-alice:/lib/tools/Inspector"
import structure GtkSupport from "GtkSupport"

import signature DRAWING_AREA from "DRAWING_AREA-sig"

functor MkDrawingArea (val xsize : real val ysize: real) : DRAWING_AREA
=
struct

    type tag = GtkSupport.tag

    (* new canvas *)

    val canvas =  GtkSupport.canvasNew()

	
    (* initial canvas settings *)

    val _ =  (GtkSupport.widgetSetUsize(canvas, 
					Real.trunc xsize, 
					Real.trunc ysize ) 
	      ;GtkSupport.canvasSetScrollRegion (canvas,0.0,0.0,xsize,ysize))


    (* background gets adjusted to the canvas *)

    val background =  GtkSupport.createCanvasBackground(canvas,xsize,ysize)


    val root = GtkSupport.canvasRoot(canvas)


    (* function to handle resize requests on this specific canvas *)

    fun resize (h,v,scrolled,valueh,valuev,max_x,max_y)  = 
	GtkSupport.resizeCanvas(h,v,scrolled,
				canvas,
				background,
				valueh,
				valuev, 
				max_x, 
				max_y)
  
end


    
