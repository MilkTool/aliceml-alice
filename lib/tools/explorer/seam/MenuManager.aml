(*
 * Author:
 *   Guido Tack <tack@ps.uni-sb.de>
 *
 * Copyright:
 *   Guido Tack, 2003
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

import structure Gtk            from "x-alice:/lib/gtk/Gtk"
import structure ExplorerNode   from "ExplorerNode"
import structure ExplorerGUI    from "ExplorerGUI"

structure MenuManager =
  struct
  fun updateMenus n =
      ((if not (ExplorerNode.isHidden n) andalso
           (ExplorerNode.hasOpenChildren n orelse
            ExplorerNode.isUnknown n) then
            (Gtk.widgetSetSensitive(ExplorerGUI.next_solution, true);
             Gtk.widgetSetSensitive(ExplorerGUI.next_n_solutions, true);
             Gtk.widgetSetSensitive(ExplorerGUI.all_solutions, true))
        else
            (Gtk.widgetSetSensitive(ExplorerGUI.next_solution, false);
             Gtk.widgetSetSensitive(ExplorerGUI.next_n_solutions, false);
             Gtk.widgetSetSensitive(ExplorerGUI.all_solutions, false)));
       if ExplorerNode.isUnknown n then
            (Gtk.widgetSetSensitive(ExplorerGUI.hidenodes, false);
             Gtk.widgetSetSensitive(ExplorerGUI.unhide_all, false);
             Gtk.widgetSetSensitive(ExplorerGUI.one_step, true);
             Gtk.widgetSetSensitive(ExplorerGUI.hide_failed, false))
       else
            (Gtk.widgetSetSensitive(ExplorerGUI.hidenodes, true);
             Gtk.widgetSetSensitive(ExplorerGUI.unhide_all, true);
             Gtk.widgetSetSensitive(ExplorerGUI.one_step, false);
             Gtk.widgetSetSensitive(ExplorerGUI.hide_failed, true))
           )

  fun startSearch() =
      (Gtk.widgetSetSensitive(ExplorerGUI.cancel_search, true);
       Gtk.widgetSetSensitive(ExplorerGUI.save, false))

  fun finishSearch() =
      (Gtk.widgetSetSensitive(ExplorerGUI.cancel_search, false);
       Gtk.widgetSetSensitive(ExplorerGUI.save, true))
  end
