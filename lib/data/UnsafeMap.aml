(*
 * Authors:
 *   Thorsten Brunklaus <brunklaus@ps.uni-sb.de>
 *
 * Copyright:
 *   Thorsten Brunklaus, 2004
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

import signature UNSAFE_MAP from "UNSAFE_MAP-sig"

structure UnsafeMap :> UNSAFE_MAP =
    struct
	type 'a map
        __primitive exception IllegalKey = "UnsafeMap.IllegalKey"

	__primitive val condGet : 'a map * 'a * 'b -> 'b = "UnsafeMap.condGet"
	__primitive val get : 'a map * 'a -> 'b = "UnsafeMap.get"
	__primitive val isMember : 'a map * 'a -> bool = "UnsafeMap.isMember"
	__primitive val new : int -> 'a map = "UnsafeMap.new"
	__primitive val put : 'a map * 'a * 'b -> unit = "UnsafeMap.put"
	__primitive val remove : 'a map * 'a -> unit = "UnsafeMap.remove"
	__primitive val toList : 'a map -> ('a * 'b) list = "UnsafeMap.toList"
	__primitive val toVector : 'a map -> ('a * 'b) vector =
			"UnsafeMap.toVector"
    end
