(*
 * Authors:
 *   Thorsten Brunklaus <brunklaus@ps.uni-sb.de>
 *
 * Copyright:
 *   Thorsten Brunklaus, 2001
 *
 * Last Change:
 *   $Date$ by $Author$
 *   $Revision$
 *
 *)

import structure RemoteCore from "RemoteCore"
import signature REMOTE     from "REMOTE-sig"
import structure Packer     from "Packer"
 
structure Remote :> REMOTE =
    struct
	signature TICKET =
	    sig
		val ticket : string
	    end

	functor Offer(signature S structure X : S) :> TICKET =
	    struct
		val ticket =
		    let
			structure P = Packer.Pack(structure X = X signature S = S)
		    in
		        RemoteCore.offer P.package
		    end
	    end
	
	functor Take(val ticket : string signature S) =
	    Packer.Unpack(val package = RemoteCore.take ticket signature S = S)

	val proxy = RemoteCore.proxy
	val time  = RemoteCore.time
	val now   = RemoteCore.now
    end
