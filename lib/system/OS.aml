(*
 * Authors:
 *   Leif Kornstaedt <kornstae@ps.uni-sb.de>
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Leif Kornstaedt and Andreas Rossberg, 2001
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

(*import structure UnsafeIODesc from "UnsafeIODesc"*)
import structure UnsafeOS     from "UnsafeOS"
import signature OS           from "OS-sig"

structure OS :> OS =
    struct
	type syserror = int
	exception SysErr = UnsafeOS.SysErr

	val errorMsg = UnsafeOS.errorMsg

	fun errorName _ = ""
	fun syserror  _ = NONE

	structure FileSys =
	    struct
		type dirstream
		eqtype file_id
		datatype access_mode = A_READ | A_WRITE | A_EXEC

		open UnsafeOS.FileSys
	    end

	structure Process =
	    struct
		eqtype status

		open UnsafeOS.Process
	    end

	structure IO =
	    struct
		eqtype iodesc

		(*val hash = UnsafeIODesc.hash*)
		(*val compare = UnsafeIODesc.compare*)

		datatype iodesc_kind =
		    FILE | DIR | SYMLINK | TTY | PIPE | SOCKET
		  | DEVICE | UNKNOWN | CLOSED

		(*val kind = UnsafeIODesc.kind*)

		structure Kind =
		    struct
			val file = FILE
			val dir = DIR
			val symlink = SYMLINK
			val tty = TTY
			val pipe = PIPE
			val socket = SOCKET
			val device = DEVICE
		    end
	    end
    end
