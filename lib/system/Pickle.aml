(*
 * Authors:
 *   Leif Kornstaedt <kornstae@ps.uni-sb.de>
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Leif Kornstaedt and Andreas Rossberg, 2001
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

import structure Url              from "../utility/Url"
import structure Component        from "Component"
import structure ComponentManager from "ComponentManager"
import signature PICKLE           from "PICKLE-sig"

structure Pickle : PICKLE =
struct
    val extension = Component.extension

    functor Save(val file : string signature S structure X : S) =
	let
	    structure C = Component.Create(signature S = (structure X : S)
					   structure X = (structure X = X))
	    val _       = Component.save(file, C.component)
	in
	    ()
	end

    functor Load(val file : string signature S) =
	let
	    val url       = Url.fromString file
	    val component = Component.load url
	    structure M   = ComponentManager.Eval(val url = url
						  val component = component
						  signature S =
						      (structure X : S))
	in
	    M.X
	end

    signature S = sig type t val x : t end

    functor SaveVal(Arg : sig val file : string type t val x : t end) =
	Save(val file = Arg.file
	     signature S = S where type t = Arg.t
	     structure X = Arg)

    functor LoadVal(val file : string type t) =
	Load(val file = file
	     signature S = S where type t = t)
end
