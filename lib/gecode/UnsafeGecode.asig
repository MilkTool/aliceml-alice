(*
 * Author:
 *   Guido Tack <tack@ps.uni-sb.de>
 *
 * Copyright:
 *   Guido Tack, 2003
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

signature GC_SIG =
   sig
       structure UnsafeGecode : sig
	   val makeSpace : unit -> 'space

	   val fdvar : 'space * (int * int) vector -> 'fdvar
	   val fdvarR : 'space * (int * int) vector * 'boolvar -> 'fdvar
	   val boolvar : 'space -> 'boolvar

	   val getMin : 'space * 'fdvar -> int
	   val getMax : 'space * 'fdvar -> int

	   val distinct : 'space * 'fdvar vector * 'conlevel -> unit
	   val distinctI : 'space * (int * 'fdvar) vector * 'conlevel -> unit

	   val countII : 'space * 'fdvar vector * 'relation *
			 int * 'relation * int -> unit
	   val countVI : 'space * 'fdvar vector * 'relation *
			 'fdvar * 'relation * int -> unit
	   val countIV : 'space * 'fdvar vector * 'relation *
			 int * 'relation * 'fdvar -> unit
	   val countVV : 'space * 'fdvar vector * 'relation *
			 'fdvar * 'relation * 'fdvar -> unit

	   val element : 'space * 'fdvar vector * 'fdvar * 'fdvar -> unit
	   val elementI : 'space * int vector * 'fdvar * 'fdvar -> unit
	   val lex : 'space * 'fdvar vector * 'relation *
		     'fdvar vector -> unit

	   val dom : 'space * 'intvar * (int * int) vector -> unit
	   val domR : 'space * 'intvar * (int * int) vector * 'boolvar -> unit

	   val rel : 'space * 'fdvar * 'relation * 'fdvar -> unit
	   val relI : 'space * 'fdvar * 'relation * 'int -> unit
	   val relR : 'space * 'fdvar * 'relation * 'fdvar * 'boolvar -> unit
	   val relIR : 'space * 'fdvar * 'relation * 'int * 'boolvar -> unit
	   val eq : 'space * 'fdvar * 'fdvar * 'conlevel -> unit
	   val eqV : 'space * 'fdvar vector * 'conlevel -> unit
	   val eqR : 'space * 'fdvar * 'fdvar * 'boolvar * 'conlevel -> unit
	   val eqVR : 'space * 'fdvar vector * 'boolvar * 'conlevel -> unit

	   val linear : 'space * (int * 'fdvar) vector * 'relation * 
			int * 'conlevel -> unit
	   val linearR : 'space * (int * 'fdvar) vector * 'relation * 
			 int * 'boolvar * 'conlevel -> unit

	   val min : 'space * 'fdvar vector * 'fdvar -> unit
	   val max : 'space * 'fdvar vector * 'fdvar -> unit
	   val abs : 'space * 'fdvar * 'fdvar * 'conlevel -> unit
	   val mult: 'space * 'fdvar * 'fdvar * 'fdvar -> unit

	   val bool_not : 'space * 'boolvar * 'boolvar -> unit
	   val bool_and : 'space * 'boolvar * 'boolvar * 'boolvar -> unit
	   val bool_or  : 'space * 'boolvar * 'boolvar * 'boolvar -> unit
	   val bool_imp : 'space * 'boolvar * 'boolvar * 'boolvar -> unit
	   val bool_eq  : 'space * 'boolvar * 'boolvar * 'boolvar -> unit
	   val bool_xor : 'space * 'boolvar * 'boolvar * 'boolvar -> unit
	   val bool_andV: 'space * 'boolvar vector * 'boolvar -> unit
	   val bool_orV : 'space * 'boolvar vector * 'boolvar -> unit

	   val branch : 'space * 'fdvar vector * 
			'b_var_sel * 'b_val_sel -> unit

	   val assign : 'space * 'fdvar vector * 'avalsel -> unit

	   val getSearchEngine : 'space -> 'searchengine
	   val next : 'searchengine -> 'space option

	   val getSearchBestEngine : 'space -> 'searchbestengine
	   val nextBest : 'searchbestengine -> 'searchbestresult

	   val status  : 'space -> 'status
	   val commit  : 'space * int -> unit
	   val clone   : 'space -> 'space
	   val discard : 'space -> unit
	   val alive   : 'space -> unit

       end
   end