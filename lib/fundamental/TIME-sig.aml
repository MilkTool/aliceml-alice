(*
 * Authors:
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Andreas Rossberg, 2001
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)


(*
 *  Items marked with (**) are extensions to the Standard Basis.
 *)

import structure __pervasive                 from "Pervasive"
import type unit and int and char and string
       type bool and order and option        from "ToplevelTypes"
import structure LargeInt                    from "LargeInt"
import structure LargeReal                   from "LargeReal"


signature TIME =
sig
    eqtype time
    type t = time							(**)

    exception Time

    val zeroTime :		time
(*TODO
    val now :			unit -> time
*)

    val fromReal :		LargeReal.real -> time
    val toReal :		time -> LargeReal.real
    val toSeconds :		time -> LargeInt.int
    val toMilliseconds :	time -> LargeInt.int
    val toMicroseconds :	time -> LargeInt.int
    val fromSeconds :		LargeInt.int -> time
    val fromMilliseconds :	LargeInt.int -> time
    val fromMicroseconds :	LargeInt.int -> time

    val op + :			time * time -> time
    val op - :			time * time -> time

    val op < :			time * time -> bool
    val op > :			time * time -> bool
    val op <= :			time * time -> bool
    val op >= :			time * time -> bool
    val compare :		time * time -> order

(*TODO
    val toString :	time -> string
    val fromString :	string -> time option
    val fmt :		int -> time -> string
    val scan :		(char,'a) StringCvt.reader -> 'a -> (time * 'a) option
*)
end
