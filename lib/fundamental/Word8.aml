(*
 * Author:
 *   Leif Kornstaedt <kornstae@ps.uni-sb.de>
 *
 * Copyright:
 *   Leif Kornstaedt, 2002
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

import structure __pervasive
       structure Int and LargeWord and Word from "Pervasive"
import type int and bool                    from "ToplevelTypes"
import structure MkWord                     from "MkWord"

structure Word8 = MkWord(
    type word

    val wordSize = 8

    __primitive val fromInt : Int.int -> word    = "Word8.fromInt"
    __primitive val toInt :   word    -> Int.int = "Word8.toInt"
    __primitive val toIntX :  word    -> Int.int = "Word8.toIntX"

    __primitive val fromLargeWord : LargeWord.word -> word = "Word8.fromLargeWord"
    __primitive val toLargeWord :   word -> LargeWord.word = "Word8.toLargeWord"
    __primitive val toLargeWordX :  word -> LargeWord.word = "Word8.toLargeWordX"

    __primitive val op + :   word * word -> word = "Word8.+"
    __primitive val op - :   word * word -> word = "Word8.-"
    __primitive val op * :   word * word -> word = "Word8.*"
    __primitive val op div : word * word -> word = "Word8.div"
    __primitive val op mod : word * word -> word = "Word8.mod"

    __primitive val notb :   word -> word        = "Word8.notb"
    __primitive val orb :    word * word -> word = "Word8.orb"
    __primitive val xorb :   word * word -> word = "Word8.xorb"
    __primitive val andb :   word * word -> word = "Word8.andb"

    __primitive val op << :  word * Word.word -> word = "Word8.<<"
    __primitive val op >> :  word * Word.word -> word = "Word8.>>"
    __primitive val op ~>> : word * Word.word -> word = "Word8.~>>"

    __primitive val op < :   word * word -> bool = "Word8.<"
    __primitive val op > :   word * word -> bool = "Word8.>"
    __primitive val op <= :  word * word -> bool = "Word8.<="
    __primitive val op >= :  word * word -> bool = "Word8.>="
)
