structure Abbrev  =
    struct
	val CBind          = ("de/uni_sb/ps/dml/runtime/Constants/dmlbind","de/uni_sb/ps/dml/runtime/Name")
	val CCons          = ("de/uni_sb/ps/dml/builtin/Constants/cons","de/uni-sb/ps/dml/runtime/Constructor")
	val CFalse         = ("de/uni_sb/ps/dml/builtin/Constants/dmlfalse","de/uni_sb/ps/dml/runtime/Name")
	val CMatch         = ("de/uni_sb/ps/dml/runtime/Constants/dmlmatch","de/uni_sb/ps/dml/runtime/Name")
	val CNil          = ("de/uni_sb/ps/dml/builtin/Constants/dmlnil","de/uni_sb/ps/dml/runtime/Name")
	val CPickle        = ("de/uni_sb/ps/dml/builtin/General/pickle", "de/uni_sb/ps/dml/builtin/General$Pickle")
	val CTrue          = ("de/uni_sb/ps/dml/builtin/Constants/dmltrue","de/uni_sb/ps/dml/runtime/Name")
	val CUnit          = ("de/uni_sb/ps/dml/runtime/Constants/dmlunit","de/uni_sb/ps/dml/runtime/Name")
	val CName          = "de/uni_sb/ps/dml/runtime/Name"
	val CConstants     = "de/uni_sb/ps/dml/runtime/Constants"
	val CConstructor   = "de/uni_sb/ps/dml/runtime/Constructor"
	val CConVal        = "de/uni_sb/ps/dml/runtime/DMLConVal"
	val CExWrap        = "de/uni_sb/ps/dml/runtime/ExceptionWrapper"
	val CFcnClosure    = "de/uni_sb/ps/dml/runtime/Function"
	val CFuture        = "de/uni_sb/ps/dml/runtime/Future"
	val CInt           = "de/uni_sb/ps/dml/runtime/Int"
	val CInternalError = "de/uni_sb/ps/dml/runtime/DMLInternalError"
	val CLabel         = "de/uni_sb/ps/dml/runtime/Label"
	val CLVal          = "de/uni_sb/ps/dml/runtime/LVar"
	val CReal          = "de/uni_sb/ps/dml/runtime/Real"
	val CRecord        = "de/uni_sb/ps/dml/runtime/Record"
	val CRecordArity   = "de/uni_sb/ps/dml/runtime/RecordArity"
	val CReference     = "de/uni_sb/ps/dml/runtime/DMLReference"
	val CSCon          = "de/uni_sb/ps/dml/runtime/SCon"
	val CStr           = "de/uni_sb/ps/dml/runtime/String"
	val CDMLThread     = "de/uni_sb/ps/dml/runtime/Thread"
	val CTuple         = "de/uni_sb/ps/dml/runtime/Tuple"
	val CVal           = "de/uni_sb/ps/dml/runtime/DMLValue"
	val CHashtable     = "java/util/Hashtable"
	val CObj           = "java/lang/Object"
	val CString        = "java/lang/String"
	val CThread        = "java/lang/Thread"
	val CVector        = "java/util/Vector"
	val CPlus          = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_plus","de/uni_sb/ps/dml/builtin/Plus")
	val CEquals        = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_equals","de/uni_sb/ps/dml/builtin/Equals")
	val CNot           = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_not","de/uni_sb/ps/dml/builtin/Not")
	val CDeref         = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_deref","de/uni_sb/ps/dml/builtin/Deref")
	val CRef           = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_ref","de/uni_sb/ps/dml/builtin/Ref")
	val CAssign        = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_assign","de/uni_sb/ps/dml/builtin/Assign")
	val CIntFromString = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_intfromstring","de/uni_sb/ps/dml/builtin/IntFromString")
	val CBoolFromString = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_boolfromstring","de/uni_sb/ps/dml/builtin/BoolFromString")
	val CRealFromString = ("de/uni_sb/ps/dml/builtin/Primitives/primitive_realfromstring","de/uni_sb/ps/dml/builtin/RealFromString")
	val CSel            = "de/uni_sb/ps/dml/builtin/Sel"
    end
