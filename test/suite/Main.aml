(*
 * Authors:
 *   Sebastian Germesin <germi@ps.uni-sb.de>
 *
 * Copyright:
 *   Sebastian Germesin, 2004
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

import structure Report      from "src/Report"
import structure Test        from "src/Test"

import structure TestBool    from "lib/fundamental/Bool"
import structure TestString  from "lib/fundamental/String"
import structure TestGeneral from "lib/fundamental/General"
import structure TestOption  from "lib/fundamental/Option"


val allTests = [TestBool.suite, TestOption.suite, 
		(*TestGeneral.suite,*) 
		TestString.suite]


fun runTests conf = 
    Report.runAll TextIO.stdOut conf allTests

fun start cfg = 
    (TextIO.output (TextIO.stdOut, "\n\n   automatic testing sequence for " 
                 ^ "Alice\n------------------------------------------\n\n");
	 runTests cfg)

fun main () = 
    case CommandLine.arguments () of
	 []                    => start Test.defaultConfig
       | [timeout, sep, more]  => start Test.defaultConfig
       | _ => ()


val _ = (main ();
	 TextIO.output (TextIO.stdOut, "\ndone.\n");
	 OS.Process.exit OS.Process.success)