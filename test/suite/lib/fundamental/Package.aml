(*
 * Authors:
 *   Sebastian Germesin <germi@ps.uni-sb.de>
 *
 * Copyright:
 *   Sebastian Germesin, 2004
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

import signature TESTSUITE from "../../src/TESTSUITE-sig"

import structure Gen       from "x-alice:/lib/test/Gen"
import structure Test      from "../../src/Test"

structure TestPackage :> TESTSUITE = (* the package test suite *)
struct

    val randomize = Gen.randomize

    fun testPack () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()
	
    fun testUnpack () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()

    fun testPackFunctor () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()

    fun testUnpackFunctor () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()

    fun testPackValFunctor () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()

    fun testUnpackValFunctor () =
	Test.test (fn _ => raise Test.NotYetImplemented) ()


    val suite = ("Package", [("pack", testPack), 
                             ("unpack", testUnpack),
                             ("Pack", testPackFunctor),
                             ("Unpack", testUnpackFunctor),
                             ("PackVal", testPackValFunctor),
 			     ("UnpackVal", testUnpackValFunctor)])
end
