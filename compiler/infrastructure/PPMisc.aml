(*
 * Author:
 *   Andreas Rossberg <rossberg@ps.uni-sb.de>
 *
 * Copyright:
 *   Andreas Rossberg, 2001
 *
 * Last change:
 *   $Date$ by $Author$
 *   $Revision$
 *)

(*
 * Miscellaneous pretty printing helpers
 *)

import structure PrettyPrint from "PrettyPrint"
import signature PP_MISC     from "PP_MISC-sig"


structure PPMisc :> PP_MISC =
struct
    (* Import *)

    open PrettyPrint

    infixr ^^ ^/^


    (* Some PP combinators *)

    val nest = nest 3

    fun quote doc  = text "`" ^^ doc ^^ text "'"
    fun paren doc  = text "(" ^^ fbox(below doc) ^^ text ")"
    fun brace doc  = text "{" ^^ fbox(below doc) ^^ text "}"
    fun brack doc  = text "[" ^^ fbox(below doc) ^^ text "]"

    fun indent doc = nest(break ^^ below doc) ^^ break
    val par        = fbox o List.foldr (fn(doc',doc) => doc' ^/^ doc) empty
    val textpar    = fbox o List.foldr (fn(s,doc) => text s ^/^ doc) empty

    fun ppCommaList ppX   []    = empty
      | ppCommaList ppX   [x]   = ppX x
      | ppCommaList ppX (x::xs) = ppX x ^^ text "," ^^ break ^^
				  ppCommaList ppX xs

    fun ppStarList ppX   []     = empty
      | ppStarList ppX   [x]    = ppX x
      | ppStarList ppX (x::xs)  = hbox(ppX x ^^ break ^^ text "*") ^^ break ^^
				  ppStarList ppX xs

    fun ppSeqPrec ppXPrec n []  = empty
      | ppSeqPrec ppXPrec n [x] = ppXPrec n x
      | ppSeqPrec ppXPrec n  xs = paren(ppCommaList (ppXPrec 0) xs)

    fun ppSeq ppX = ppSeqPrec (fn _ => ppX) 0
end
