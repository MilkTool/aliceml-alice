#!/bin/sh
# 
# build-deb: Build DEBs from a source tarball
# Marco Kuhlmann <kuhlmann@ps.uni-sb.de>, public domain
# 

# This script puts all the files necessary to build a Debian
# package from a number of source files into one directory and
# starts the build.  It takes two kinds of arguments: The
# standard arguments are interpreted as source files; they will
# be put into the *.orig.tar.gz that later forms the official
# source that can be uploaded into the Debian archives.  The
# second kind of arguments is introduced with the --add switch;
# they are the additional files that will be put into the
# distribution (and reflected in the Debian *.diff -- e.g.,
# patches, Debian-specific add-on files, etc.).

set -e

usage () {
    echo "Usage: $0 SOURCE... [--add [FILENAME|DIRNAME]]..."
    exit 1
}

# The name of the main tarball (the first source given on the
# command line) is assumed to be formatted according to the
# standard conventions and will be used as the name of the Debian
# source package.

init () {
    local tmp

    tmp=$(echo "$(basename ${tarball})" | sed 's/\(\.tar\)\?\.gz//')

    pkgname=$(echo "${tmp}" | sed 's/^\(.\+\)-.*/\1/')
    pkgvers=$(echo "${tmp}" | sed 's/^.\+-\(.*\)/\1/')

    package=${pkgname}-${pkgvers}
}

copy_file_or_directory () {
    if test -f $1 -o -h $1; then
	echo "  $1"
	cp -p $1 $2
    elif test -d $1; then
	echo "  $1 (including subdirectories)"
	cp -p -r $1 $2
    else
	echo "Error: file or directory $1 does not exist; aborting."
	exit 1
    fi
}

# If a package build directory (e.g., foo-1.3) cannot be found in
# the current working directory, assume that no *.orig.tar.gz
# file has been created yet and create it on the fly from the
# sources and additional files specified on the command line.

setup () {
    local tmpdir=$(mktemp -d) pkgdir skip_next

    pkgdir=${tmpdir}/${package}

    mkdir ${pkgdir}

    echo "Copying source files:"

    additional=0
    for f in $@; do
	if test "$f" = "--add"; then
	    test ${additional} -eq 1 && usage
	    additional=1
	else
	    if test ${additional} -eq 0; then
		copy_file_or_directory $f ${pkgdir}
	    fi
	    additional=0
	fi
    done

    echo -n "Preparing ${pkgname}_${pkgvers}.orig.tar.gz... "

    (cd ${tmpdir} && tar czf ${pkgname}_${pkgvers}.orig.tar.gz ${package})
    mv ${tmpdir}/${pkgname}_${pkgvers}.orig.tar.gz .
    rm -rf ${tmpdir}

    echo "done."

    echo -n "Unpacking ${pkgname}_${pkgvers}.orig.tar.gz... "

    tar xzf ${pkgname}_${pkgvers}.orig.tar.gz

    echo "done."

    echo "Copying additional files:"

    additional=0
    for f in $@; do
	if test "$f" = "--add"; then
	    test ${additional} -eq 1 && usage
	    additional=1
	else
	    if test ${additional} -eq 1; then
		copy_file_or_directory $f ${package}
	    fi
	    additional=0
	fi
    done

    echo "done."
}

test $# -lt 1 && usage

tarball=$(cd $(dirname $1) && echo $(pwd)/$(basename $1) && shift)

if test ! -f ${tarball}; then
    echo "Error: Source tarball ${tarball} does not exist; aborting."
    exit 1
fi

init

test -d ${package} || setup $@

(cd ${package} && dpkg-buildpackage -rfakeroot)
