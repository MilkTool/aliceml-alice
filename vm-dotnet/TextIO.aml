signature TEXT_IO =
    sig
	type instream
	type outstream

	type vector = string
	type elem = char

	val stdIn : instream
	val openIn : string -> instream
	val inputAll : instream -> vector
	val inputLine : instream -> vector
	val closeIn : instream -> unit
	val stdOut : outstream
	val stdErr : outstream
	val openOut : string -> outstream
	val output : outstream * vector -> unit
	val output1 : outstream * elem -> unit
	val flushOut : outstream -> unit
	val closeOut : outstream -> unit
	val print : string -> unit
    end

structure TextIO :> TEXT_IO =
    struct
	type instream
	type outstream

	type vector = string
	type elem = char

	__primitive val stdIn : instream = "TextIO.stdIn"
	__primitive val openIn : string -> instream = "TextIO.openIn"
	__primitive val inputAll : instream -> vector = "TextIO.inputAll"
	__primitive val inputLine : instream -> vector = "TextIO.inputLine"
	__primitive val closeIn : instream -> unit = "TextIO.closeIn"
	__primitive val stdOut : outstream = "TextIO.stdOut"
	__primitive val stdErr : outstream = "TextIO.stdErr"
	__primitive val openOut : string -> outstream = "TextIO.openOut"
	__primitive val output : outstream * vector -> unit = "TextIO.output"
	__primitive val output1 : outstream * elem -> unit = "TextIO.output1"
	__primitive val flushOut : outstream -> unit = "TextIO.flushOut"
	__primitive val closeOut : outstream -> unit = "TextIO.closeOut"
	__primitive val print : string -> unit = "TextIO.print"
    end

val print = TextIO.print
