(* Alice Snake 2.0 - QuestionWindow
*
*  Authors: Benedikt Grundmann / Sebastian Germesin
*
*  $Revision$
*
*  Last updated: $Date$ by $Author$
* 
*
*)

import structure Gtk       from "x-alice:/lib/gtk/Gtk"
import structure Gdk       from "x-alice:/lib/gtk/Gdk"
import structure GtkCanvas from "x-alice:/lib/gtk/GtkCanvas"
import structure Inspector from "x-alice:/lib/tools/Inspector"


structure QuestionWindow =
struct

    datatype answer = YES | NO | CANCEL
	


    fun mkQuestionBox (title, quest, answer) =
	let

	    val questionWindow = Gtk.dialogNew ()
	    val yesButton      = Gtk.buttonNewWithLabel "Yes"
	    val noButton       = Gtk.buttonNewWithLabel "No"
		
	    fun question q = 
		let
		    val label = Gtk.labelNew q
		in
		    Gtk.boxPackStart (Gtk.dialogGetFieldVbox questionWindow,
				      label, 
				      true, 
				      true, 
				      10)
		end

	    fun mainQuit ans = (Inspector.inspect ("QuestionWindow", ans);
				Promise.fulfill (answer, ans);
				Gtk.widgetDestroy questionWindow;
				Inspector.inspect ("QuestionWindow", answer))

	in

	    question quest;
	    Gtk.windowSetModal (Gtk.dialogGetFieldWindow questionWindow, true);
	    Gtk.containerSetBorderWidth 
	    (Gtk.dialogGetFieldWindow questionWindow, 10);
	    Gtk.windowSetTitle (Gtk.dialogGetFieldWindow questionWindow, title);
	    Gtk.windowSetPosition (Gtk.dialogGetFieldWindow questionWindow,
				   Gtk.WIN_POS_CENTER);
	    
	    Gtk.signalConnect (Gtk.dialogGetFieldWindow questionWindow, 
			       "delete-event",
			       fn _ => mainQuit CANCEL);
	    Gtk.signalConnect (yesButton, "clicked", 
			       fn _ => mainQuit YES);
	    Gtk.signalConnect (noButton, "clicked", 
			       fn _ => mainQuit NO);
	    
	    Gtk.boxPackStart (Gtk.dialogGetFieldActionArea questionWindow,
			      yesButton, true, true, 5);
	    Gtk.boxPackStart (Gtk.dialogGetFieldActionArea questionWindow,
			      noButton, true, true, 5);

	    Gtk.widgetShowAll questionWindow
	end

end