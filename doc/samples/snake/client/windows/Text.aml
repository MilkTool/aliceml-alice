(* Alice Snake 2.0 - TextWindow
*
*  Authors: Benedikt Grundmann / Sebastian Germesin
*
*  $Revision$
*
*  Last updated: $Date$ by $Author$
* 
*
*)

import structure Gtk       from "x-alice:/lib/gtk/Gtk"

import structure Protocol  from "../../common/Protocol"



structure Text =
struct


    (* [mkTextWindow(title, mode)] builds a text window 
     with title 'title' and text 'mode' *)
    fun mkTextWindow (title, mode) = 
	let

	    val textWindow  = Gtk.windowNew Gtk.WINDOW_TOPLEVEL
	    val dialogVBox  = Gtk.vboxNew (false, 0)
	    val closeButton = Gtk.buttonNewWithLabel "  Close  "
	    val buttonHBox  = Gtk.hbuttonBoxNew ()
	    val label       = Gtk.labelNew mode

	in

	    Gtk.windowSetTitle (textWindow, title);
	    Gtk.windowSetModal (textWindow, true);
	    Gtk.windowSetPosition (textWindow, Gtk.WIN_POS_CENTER);
	    Gtk.containerSetBorderWidth (textWindow , 10);

	    Gtk.signalConnect (textWindow , "delete-event", 
			       fn _ => Gtk.widgetDestroy textWindow);
	    Gtk.signalConnect (closeButton, "clicked", 
			       fn _ => Gtk.widgetDestroy textWindow);

	    Gtk.boxPackStart (buttonHBox, closeButton, false, false, 5);
	    Gtk.boxPackStart (dialogVBox, label, false, false, 5);
	    Gtk.boxPackStart (dialogVBox, buttonHBox, false, false, 5);

	    Gtk.containerAdd (textWindow, dialogVBox);
    	    Gtk.widgetShowAll textWindow	    

	end

end
