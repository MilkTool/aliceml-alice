import structure Protocol  from "../common/Protocol"
import val log'            from "../common/Log"


local
    fun mkInspector t fname a = log' t ("Client", (fname, a))
       
    __overload 'a mkInspector: string -> 'a -> unit = mkInspector

in
    val dummyClient = {
        playersJoined       = mkInspector "playersJoined",
        tournamentStarted   = mkInspector "tournamentStarted",
        levelStarted        = mkInspector "levelStarted",
        playerDisconnected  = mkInspector "playerDisconnected",
        abort               = mkInspector "abort",
        update              = mkInspector "update",
        tick                = mkInspector "tick",
        levelFinished       = mkInspector "levelFinished",
        tournamentFinished  = mkInspector "tournamentFinished",
        updatePoints        = mkInspector "updatePoints",
	playersDied         = mkInspector "playersDied",
        playersFinished     = mkInspector "playersFinished",
	countdown           = mkInspector "countdown"
    } : Protocol.client_interface

end
