val dontknow      = nop
val hill_diameter = 4
val foodmarker    = marker foodmarker

val move_to_border =
    repeat 3 (turn left) ++
    loopx (fn exit =>
        sense here home ifnot exit ++
        move ifnot (flip2 2 ifyes (turn left) ifnot (turn right)))

val move_food_inside =
    turn right ++ turn right ++
    times (hill_diameter div 2) (move ifnot nop) ++
    drop ++ goto "guard"

fun turnto360 cond fail =
    try (fn exit =>
        sense leftahead cond ifyes exit ++
        sense ahead cond ifyes exit ++
        sense rightahead cond ifyes exit ++
        turn right ++
        sense rightahead cond ifyes exit ++
        turn right ++
        sense rightahead cond ifyes exit ++
        turn right ++
        sense rightahead cond ifyes exit) 
    otherwise
        nop

val become_worker =
    turnto360 foodmarker (goto "guard")

fun blocked fail =
    sense ahead friend ifyes fail  ++
    sense leftahead foe ifyes fail ++
    sense ahead foe ifyes (turn right ++ move ifnot fail)

val step =
    sense rightahead home ifnot (turn right) ++ 
    sense rightahead home ifnot (turn right) ++ 
    sense rightahead home ifnot (turn right) ++
    sense here food ifyes (pick ifnot nop ++ move_food_inside) ++
    sense here foodmarker ifyes become_worker ++
    move ifnot (blocked (goto "guard") ++ goto "guard")

val ant =
    proc "guard" move_to_border ++
    loop step
