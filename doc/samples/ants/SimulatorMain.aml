import structure Simulator from "Simulator"

val showStatus = ref false
val showWorlds = ref false
val drawWorlds = ref false
val showAnts = ref false
val rounds = ref 10000

fun parseArgs ("-s"::r) = (showStatus:=true; parseArgs r)
  | parseArgs ("-w"::r) = (showWorlds:=true; showAnts:=false;
                                 parseArgs r)
  | parseArgs ("-d"::r) = (drawWorlds:=true; showAnts:=false;
                                 parseArgs r)
  | parseArgs ("-a"::r) = (showAnts:=true; showWorlds:=false;
                               parseArgs r)
  | parseArgs ("-r"::noOfRounds::r) = (rounds:=valOf(Int.fromString noOfRounds);
                                       parseArgs r)
  | parseArgs r = r

val args = parseArgs (CommandLine.arguments())
val (ant1,ant2,world) = case args of [a,b,c] => (a,b,c)
                                   | _ => (print "Illegal number of arguments.\n";
                                           OS.Process.exit OS.Process.failure)


val _ = Simulator.simulate(!showStatus, !showWorlds, !showAnts, !drawWorlds,
                           !rounds,ant1,ant2,world)
val _ = OS.Process.exit OS.Process.success
