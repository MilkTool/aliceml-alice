signature GTK_CLASSES =
sig
    val getMethod : string * string -> string option
end

structure GtkClasses :> GTK_CLASSES=
struct
    val db =
	[
	 {class="GnomeCanvas",
	  ancestor="GtkLayout",
	  methods=[
		   "nomeCanvasPointsGetType", 
		   "nomeCanvasCapGdkToArt", 
		   "nomeCanvasJoinGdkToArt", 
		   "nomeCanvasBufEnsureBuf", 
		   "nomeCanvasUpdateBbox", 
		   "nomeCanvasItemRequestRedrawSvp", 
		   "nomeCanvasItemUpdateSvpClip", 
		   "nomeCanvasItemUpdateSvp", 
		   "nomeCanvasItemResetBounds", 
		   "nomeCanvasUpdateSvpClip", 
		   "nomeCanvasUpdateSvp", 
		   "nomeCanvasRenderSvp", 
		   "nomeCanvasPolygonToPoint", 
		   "nomeCanvasGetButtPoints", 
		   "nomeCanvasGetMiterPoints", 
		   "nomeCanvasPointsFree", 
		   "nomeCanvasPointsRef", 
		   "nomeCanvasPointsNew", 
		   "nomeCanvasBpathGetType", 
		   "nomeCanvasEllipseGetType", 
		   "nomeCanvasRectGetType", 
		   "nomeCanvasReGetType", 
		   "nomeCanvasWidgetGetType", 
		   "nomeCanvasPixbufGetType", 
		   "nomeCanvasPolygonGetType", 
		   "nomeCanvasShapeGetType", 
		   "nomeCanvasShapeGetPathDef", 
		   "nomeCanvasShapeSetPathDef", 
		   "nomeCanvasPathDefAllClosed", 
		   "nomeCanvasPathDefAnyClosed", 
		   "nomeCanvasPathDefAllOpen", 
		   "nomeCanvasPathDefAnyOpen", 
		   "nomeCanvasPathDefFirstBpath", 
		   "nomeCanvasPathDefLastBpath", 
		   "nomeCanvasPathDefCurrentpoint", 
		   "nomeCanvasPathDefHasCurrentpoint", 
		   "nomeCanvasPathDefIsEmpty", 
		   "nomeCanvasPathDefLength", 
		   "nomeCanvasPathDefBpath", 
		   "nomeCanvasPathDefClosepathCurrent", 
		   "nomeCanvasPathDefClosepath", 
		   "nomeCanvasPathDefCurveto", 
		   "nomeCanvasPathDefLinetoMoving", 
		   "nomeCanvasPathDefLineto", 
		   "nomeCanvasPathDefMoveto", 
		   "nomeCanvasPathDefReset", 
		   "nomeCanvasPathDefUnref", 
		   "nomeCanvasPathDefCloseAll", 
		   "nomeCanvasPathDefClosedParts", 
		   "nomeCanvasPathDefOpenParts", 
		   "nomeCanvasPathDefSplit", 
		   "nomeCanvasPathDefConcat", 
		   "nomeCanvasPathDefDuplicate", 
		   "nomeCanvasPathDefCopy", 
		   "nomeCanvasPathDefEnsureSpace", 
		   "nomeCanvasPathDefRef", 
		   "nomeCanvasPathDefNewFromForeignBpath", 
		   "nomeCanvasPathDefNewFromStaticBpath", 
		   "nomeCanvasPathDefNewFromBpath", 
		   "nomeCanvasPathDefNewSized", 
		   "nomeCanvasPathDefNew", 
		   "nomeCanvasPathDefFinish", 
		   "nomeCanvasRichTextGetIterAtLocation", 
		   "nomeCanvasRichTextGetIterLocation", 
		   "nomeCanvasRichTextGetBuffer", 
		   "nomeCanvasRichTextSetBuffer", 
		   "nomeCanvasRichTextPasteClipboard", 
		   "nomeCanvasRichTextCopyClipboard", 
		   "nomeCanvasRichTextCutClipboard", 
		   "nomeCanvasRichTextGetType", 
		   "nomeCanvasTextGetType", 
		   "nomeCanvasLineGetType", 
		   "nomeCanvasGetDither", 
		   "nomeCanvasSetDither", 
		   "nomeCanvasSetStippleOrigin", 
		   "nomeCanvasGetColorPixel", 
		   "nomeCanvasGetColor", 
		   "nomeCanvasWorldToWindow", 
		   "nomeCanvasWindowToWorld", 
		   "nomeCanvasC2w", 
		   "nomeCanvasW2cD", 
		   "nomeCanvasW2c", 
		   "nomeCanvasW2cAffine", 
		   "nomeCanvasRequestRedraw", 
		   "nomeCanvasRequestRedrawUta", 
		   "nomeCanvasGetItemAt", 
		   "nomeCanvasUpdateNow", 
		   "nomeCanvasGetScrollOffsets", 
		   "nomeCanvasScrollTo", 
		   "nomeCanvasSetPixelsPerUnit", 
		   "nomeCanvasGetCenterScrollRegion", 
		   "nomeCanvasSetCenterScrollRegion", 
		   "nomeCanvasGetScrollRegion", 
		   "nomeCanvasSetScrollRegion", 
		   "nomeCanvasRoot", 
		   "nomeCanvasNewAa", 
		   "nomeCanvasNew", 
		   "nomeCanvasGetType", 
		   "nomeCanvasGroupGetType", 
		   "nomeCanvasItemRequestUpdate", 
		   "nomeCanvasItemGetBounds", 
		   "nomeCanvasItemGrabFocus", 
		   "nomeCanvasItemReparent", 
		   "nomeCanvasItemI2cAffine", 
		   "nomeCanvasItemI2wAffine", 
		   "nomeCanvasItemW2i", 
		   "nomeCanvasItemI2w", 
		   "nomeCanvasItemShow", 
		   "nomeCanvasItemLowerToBottom", 
		   "nomeCanvasItemGrab", 
		   "nomeCanvasItemRaiseToTop", 
		   "nomeCanvasItemUngrab", 
		   "nomeCanvasItemRaise", 
		   "nomeCanvasItemAffineRelative", 
		   "nomeCanvasItemLower", 
		   "nomeCanvasItemSet", 
		   "nomeCanvasItemAffineAbsolute", 
		   "nomeCanvasItemNew", 
		   "nomeCanvasItemMove", 
		   "nomeCanvasItemGetType", 
		   "nomeCanvasItemHide"]}
	 ,
	 {class="GnomeCanvasBpath",
	  ancestor="GnomeCanvasShape",
	  methods=[
		   "nomeCanvasBpathGetType"]}
	 ,
	 {class="GnomeCanvasEllipse",
	  ancestor="GnomeCanvasRE",
	  methods=[
		   "nomeCanvasEllipseGetType"]}
	 ,
	 {class="GnomeCanvasGroup",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasGroupGetType"]}
	 ,
	 {class="GnomeCanvasItem",
	  ancestor="GtkObject",
	  methods=[
		   "nomeCanvasItemRequestRedrawSvp", 
		   "nomeCanvasItemUpdateSvpClip", 
		   "nomeCanvasItemUpdateSvp", 
		   "nomeCanvasItemResetBounds", 
		   "nomeCanvasItemRequestUpdate", 
		   "nomeCanvasItemGetBounds", 
		   "nomeCanvasItemGrabFocus", 
		   "nomeCanvasItemReparent", 
		   "nomeCanvasItemI2cAffine", 
		   "nomeCanvasItemI2wAffine", 
		   "nomeCanvasItemW2i", 
		   "nomeCanvasItemI2w", 
		   "nomeCanvasItemShow", 
		   "nomeCanvasItemLowerToBottom", 
		   "nomeCanvasItemGrab", 
		   "nomeCanvasItemRaiseToTop", 
		   "nomeCanvasItemUngrab", 
		   "nomeCanvasItemRaise", 
		   "nomeCanvasItemAffineRelative", 
		   "nomeCanvasItemLower", 
		   "nomeCanvasItemSet", 
		   "nomeCanvasItemAffineAbsolute", 
		   "nomeCanvasItemNew", 
		   "nomeCanvasItemMove", 
		   "nomeCanvasItemGetType", 
		   "nomeCanvasItemHide"]}
	 ,
	 {class="GnomeCanvasLine",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasLineGetType"]}
	 ,
	 {class="GnomeCanvasPixbuf",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasPixbufGetType"]}
	 ,
	 {class="GnomeCanvasPolygon",
	  ancestor="GnomeCanvasShape",
	  methods=[
		   "nomeCanvasPolygonToPoint", 
		   "nomeCanvasPolygonGetType"]}
	 ,
	 {class="GnomeCanvasRE",
	  ancestor="GnomeCanvasShape",
	  methods=[
		   "nomeCanvasReGetType"]}
	 ,
	 {class="GnomeCanvasRect",
	  ancestor="GnomeCanvasRE",
	  methods=[
		   "nomeCanvasRectGetType"]}
	 ,
	 {class="GnomeCanvasRichText",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasRichTextGetIterAtLocation", 
		   "nomeCanvasRichTextGetIterLocation", 
		   "nomeCanvasRichTextGetBuffer", 
		   "nomeCanvasRichTextSetBuffer", 
		   "nomeCanvasRichTextPasteClipboard", 
		   "nomeCanvasRichTextCopyClipboard", 
		   "nomeCanvasRichTextCutClipboard", 
		   "nomeCanvasRichTextGetType"]}
	 ,
	 {class="GnomeCanvasShape",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasShapeGetType", 
		   "nomeCanvasShapeGetPathDef", 
		   "nomeCanvasShapeSetPathDef"]}
	 ,
	 {class="GnomeCanvasText",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasTextGetType"]}
	 ,
	 {class="GnomeCanvasWidget",
	  ancestor="GnomeCanvasItem",
	  methods=[
		   "nomeCanvasWidgetGetType"]}
	 ,
	 {class="GtkAccelGroup",
	  ancestor="GtkOzBase",
	  methods=[
		   "accelGroupQuery", 
		   "accelGroupFind", 
		   "accelGroupFromAccelClosure", 
		   "accelGroupDisconnectKey", 
		   "accelGroupDisconnect", 
		   "accelGroupConnectByPath", 
		   "accelGroupConnect", 
		   "accelGroupUnlock", 
		   "accelGroupLock", 
		   "accelGroupNew", 
		   "accelGroupGetType"]}
	 ,
	 {class="GtkAccelGroupEntry",
	  ancestor="GtkAccelKey",
	  methods=[]}
	 ,
	 {class="GtkAccelKey",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkAccelLabel",
	  ancestor="GtkLabel",
	  methods=[
		   "accelLabelRefetch", 
		   "accelLabelSetAccelClosure", 
		   "accelLabelSetAccelWidget", 
		   "accelLabelGetAccelWidth", 
		   "accelLabelGetAccelWidget", 
		   "accelLabelNew", 
		   "accelLabelGetType"]}
	 ,
	 {class="GtkAccessible",
	  ancestor="GtkOzBase",
	  methods=[
		   "accessibleConnectWidgetDestroyed", 
		   "accessibleGetType"]}
	 ,
	 {class="GtkAdjustment",
	  ancestor="GtkObject",
	  methods=[
		   "adjustmentSetValue", 
		   "adjustmentGetValue", 
		   "adjustmentClampPage", 
		   "adjustmentValueChanged", 
		   "adjustmentChanged", 
		   "adjustmentNew", 
		   "adjustmentGetType"]}
	 ,
	 {class="GtkAlignment",
	  ancestor="GtkBin",
	  methods=[
		   "alignmentSet", 
		   "alignmentNew", 
		   "alignmentGetType"]}
	 ,
	 {class="GtkArg",
	  ancestor="GtkOzBase",
	  methods=[
		   "argFlagsGetType"]}
	 ,
	 {class="GtkArrow",
	  ancestor="GtkMisc",
	  methods=[
		   "arrowTypeGetType", 
		   "arrowNew", 
		   "arrowGetType", 
		   "arrowSet"]}
	 ,
	 {class="GtkAspectFrame",
	  ancestor="GtkFrame",
	  methods=[
		   "aspectFrameGetType", 
		   "aspectFrameSet", 
		   "aspectFrameNew"]}
	 ,
	 {class="GtkBin",
	  ancestor="GtkContainer",
	  methods=[
		   "binGetChild", 
		   "binGetType"]}
	 ,
	 {class="GtkBindingArg",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkBindingEntry",
	  ancestor="GtkOzBase",
	  methods=[
		   "bindingEntryAddSignall", 
		   "bindingEntryRemove", 
		   "bindingEntryAddSignal", 
		   "bindingEntryClear"]}
	 ,
	 {class="GtkBindingSet",
	  ancestor="GtkOzBase",
	  methods=[
		   "bindingSetAddPath", 
		   "bindingSetActivate", 
		   "bindingSetFind", 
		   "bindingSetByClass", 
		   "bindingSetNew"]}
	 ,
	 {class="GtkBindingSignal",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkBorder",
	  ancestor="GtkOzBase",
	  methods=[
		   "borderFree", 
		   "borderCopy", 
		   "borderGetType"]}
	 ,
	 {class="GtkBox",
	  ancestor="GtkContainer",
	  methods=[
		   "boxSetChildPacking", 
		   "boxQueryChildPacking", 
		   "boxReorderChild", 
		   "boxGetSpacing", 
		   "boxSetSpacing", 
		   "boxGetHomogeneous", 
		   "boxSetHomogeneous", 
		   "boxPackEndDefaults", 
		   "boxPackStartDefaults", 
		   "boxPackEnd", 
		   "boxPackStart", 
		   "boxGetType"]}
	 ,
	 {class="GtkBoxChild",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkButton",
	  ancestor="GtkBin",
	  methods=[
		   "buttonBoxStyleGetType", 
		   "buttonActionGetType", 
		   "buttonGetUseStock", 
		   "buttonSetUseStock", 
		   "buttonGetUseUnderline", 
		   "buttonSetUseUnderline", 
		   "buttonGetLabel", 
		   "buttonSetLabel", 
		   "buttonGetRelief", 
		   "buttonSetRelief", 
		   "buttonLeave", 
		   "buttonEnter", 
		   "buttonClicked", 
		   "buttonReleased", 
		   "buttonNewWithMnemonic", 
		   "buttonNewFromStock", 
		   "buttonNew", 
		   "buttonPressed", 
		   "buttonGetType", 
		   "buttonNewWithLabel", 
		   "buttonBoxGetChildIpadding", 
		   "buttonBoxGetChildSize", 
		   "buttonBoxSetChildIpadding", 
		   "buttonBoxSetChildSize", 
		   "buttonBoxSetChildSecondary", 
		   "buttonBoxGetLayout", 
		   "buttonBoxGetType", 
		   "buttonBoxSetLayout"]}
	 ,
	 {class="GtkButtonBox",
	  ancestor="GtkBox",
	  methods=[
		   "buttonBoxStyleGetType", 
		   "buttonBoxGetChildIpadding", 
		   "buttonBoxGetChildSize", 
		   "buttonBoxSetChildIpadding", 
		   "buttonBoxSetChildSize", 
		   "buttonBoxSetChildSecondary", 
		   "buttonBoxGetLayout", 
		   "buttonBoxGetType", 
		   "buttonBoxSetLayout"]}
	 ,
	 {class="GtkCList",
	  ancestor="GtkContainer",
	  methods=[
		   "clistSetAutoSort", 
		   "clistSort", 
		   "clistSetSortType", 
		   "clistSetSortColumn", 
		   "clistSetCompareFunc", 
		   "clistRowMove", 
		   "clistSwapRows", 
		   "clistUnselectAll", 
		   "clistSelectAll", 
		   "clistGetSelectionInfo", 
		   "clistClear", 
		   "clistUndoSelection", 
		   "clistUnselectRow", 
		   "clistSelectRow", 
		   "clistFindRowFromData", 
		   "clistGetRowData", 
		   "clistSetRowDataFull", 
		   "clistSetRowData", 
		   "clistRemove", 
		   "clistInsert", 
		   "clistAppend", 
		   "clistPrepend", 
		   "clistGetSelectable", 
		   "clistSetShift", 
		   "clistGetRowStyle", 
		   "clistSetRowStyle", 
		   "clistGetCellStyle", 
		   "clistSetCellStyle", 
		   "clistSetBackground", 
		   "clistSetSelectable", 
		   "clistSetForeground", 
		   "clistGetPixtext", 
		   "clistSetPixtext", 
		   "clistGetPixmap", 
		   "clistGetText", 
		   "clistGetCellType", 
		   "clistRowIsVisible", 
		   "clistSetPixmap", 
		   "clistMoveto", 
		   "clistSetRowHeight", 
		   "clistSetColumnMaxWidth", 
		   "clistSetColumnMinWidth", 
		   "clistSetColumnWidth", 
		   "clistOptimalColumnWidth", 
		   "clistColumnsAutosize", 
		   "clistSetColumnAutoResize", 
		   "clistSetText", 
		   "clistSetColumnResizeable", 
		   "clistSetColumnJustification", 
		   "clistSetColumnVisibility", 
		   "clistGetColumnWidget", 
		   "clistSetColumnWidget", 
		   "clistGetColumnTitle", 
		   "clistSetColumnTitle", 
		   "clistColumnTitlesPassive", 
		   "clistColumnTitlesActive", 
		   "clistColumnTitlePassive", 
		   "clistColumnTitleActive", 
		   "clistColumnTitlesHide", 
		   "clistColumnTitlesShow", 
		   "clistThaw", 
		   "clistSetButtonActions", 
		   "clistFreeze", 
		   "clistSetUseDragIcons", 
		   "clistSetReorderable", 
		   "clistSetSelectionMode", 
		   "clistSetShadowType", 
		   "clistGetVadjustment", 
		   "clistGetHadjustment", 
		   "clistSetVadjustment", 
		   "clistSetHadjustment", 
		   "clistNewWithTitles", 
		   "clistNew", 
		   "clistGetType", 
		   "clistDragPosGetType"]}
	 ,
	 {class="GtkCListCellInfo",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCListColumn",
	  ancestor="GtkOzBase",
	  methods=[
		   "clistColumnTitlesPassive", 
		   "clistColumnTitlesActive", 
		   "clistColumnTitlePassive", 
		   "clistColumnTitleActive", 
		   "clistColumnTitlesHide", 
		   "clistColumnTitlesShow"]}
	 ,
	 {class="GtkCListDestInfo",
	  ancestor="GtkCListCellInfo",
	  methods=[]}
	 ,
	 {class="GtkCListRow",
	  ancestor="GtkOzBase",
	  methods=[
		   "clistRowMove", 
		   "clistRowIsVisible"]}
	 ,
	 {class="GtkCTree",
	  ancestor="GtkCList",
	  methods=[
		   "ctreeNodeGetType", 
		   "ctreeSortRecursive", 
		   "ctreeSortNode", 
		   "ctreeSetDragCompareFunc", 
		   "ctreeSetExpanderStyle", 
		   "ctreeSetSpacing", 
		   "ctreeSetIndent", 
		   "ctreeNodeIsVisible", 
		   "ctreeSetShowStub", 
		   "ctreeNodeMoveto", 
		   "ctreeSetLineStyle", 
		   "ctreeNodeGetRowData", 
		   "ctreeNodeSetRowDataFull", 
		   "ctreeNodeSetRowData", 
		   "ctreeNodeSetBackground", 
		   "ctreeNodeSetForeground", 
		   "ctreeNodeSetCellStyle", 
		   "ctreeNodeGetCellStyle", 
		   "ctreeNodeSetRowStyle", 
		   "ctreeNodeGetRowStyle", 
		   "ctreeGetNodeInfo", 
		   "ctreeNodeGetPixtext", 
		   "ctreeNodeGetPixmap", 
		   "ctreeNodeGetText", 
		   "ctreeNodeGetCellType", 
		   "ctreeNodeGetSelectable", 
		   "ctreeNodeSetSelectable", 
		   "ctreeNodeSetShift", 
		   "ctreeSetNodeInfo", 
		   "ctreeNodeSetPixtext", 
		   "ctreeNodeSetPixmap", 
		   "ctreeNodeSetText", 
		   "ctreeRealSelectRecursive", 
		   "ctreeUnselectRecursive", 
		   "ctreeUnselect", 
		   "ctreeSelectRecursive", 
		   "ctreeSelect", 
		   "ctreeToggleExpansionRecursive", 
		   "ctreeToggleExpansion", 
		   "ctreeCollapseToDepth", 
		   "ctreeCollapseRecursive", 
		   "ctreeCollapse", 
		   "ctreeExpandToDepth", 
		   "ctreeExpandRecursive", 
		   "ctreeExpand", 
		   "ctreeMove", 
		   "ctreeIsHotSpot", 
		   "ctreeFindAllByRowDataCustom", 
		   "ctreeFindByRowDataCustom", 
		   "ctreeFindAllByRowData", 
		   "ctreeFindByRowData", 
		   "ctreeIsAncestor", 
		   "ctreeFind", 
		   "ctreeNodeNth", 
		   "ctreeFindNodePtr", 
		   "ctreeLast", 
		   "ctreeIsViewable", 
		   "ctreePreRecursiveToDepth", 
		   "ctreePreRecursive", 
		   "ctreePostRecursiveToDepth", 
		   "ctreePostRecursive", 
		   "ctreeExportToGnode", 
		   "ctreeInsertGnode", 
		   "ctreeRemoveNode", 
		   "ctreeInsertNode", 
		   "ctreeNew", 
		   "ctreeNewWithTitles", 
		   "ctreeGetType", 
		   "ctreeExpansionTypeGetType", 
		   "ctreeExpanderStyleGetType", 
		   "ctreePosGetType", 
		   "ctreeLineStyleGetType"]}
	 ,
	 {class="GtkCTreeNode",
	  ancestor="GtkOzBase",
	  methods=[
		   "ctreeNodeGetType", 
		   "ctreeNodeIsVisible", 
		   "ctreeNodeMoveto", 
		   "ctreeNodeGetRowData", 
		   "ctreeNodeSetRowDataFull", 
		   "ctreeNodeSetRowData", 
		   "ctreeNodeSetBackground", 
		   "ctreeNodeSetForeground", 
		   "ctreeNodeSetCellStyle", 
		   "ctreeNodeGetCellStyle", 
		   "ctreeNodeSetRowStyle", 
		   "ctreeNodeGetRowStyle", 
		   "ctreeNodeGetPixtext", 
		   "ctreeNodeGetPixmap", 
		   "ctreeNodeGetText", 
		   "ctreeNodeGetCellType", 
		   "ctreeNodeGetSelectable", 
		   "ctreeNodeSetSelectable", 
		   "ctreeNodeSetShift", 
		   "ctreeNodeSetPixtext", 
		   "ctreeNodeSetPixmap", 
		   "ctreeNodeSetText", 
		   "ctreeNodeNth"]}
	 ,
	 {class="GtkCTreeRow",
	  ancestor="GtkCListRow",
	  methods=[]}
	 ,
	 {class="GtkCalendar",
	  ancestor="GtkWidget",
	  methods=[
		   "calendarDisplayOptionsGetType", 
		   "calendarFreeze", 
		   "calendarGetDate", 
		   "calendarDisplayOptions", 
		   "calendarClearMarks", 
		   "calendarUnmarkDay", 
		   "calendarSelectDay", 
		   "calendarMarkDay", 
		   "calendarNew", 
		   "calendarGetType", 
		   "calendarSelectMonth", 
		   "calendarThaw"]}
	 ,
	 {class="GtkCell",
	  ancestor="GtkOzBase",
	  methods=[
		   "cellRendererPixbufNew", 
		   "cellRendererPixbufGetType", 
		   "cellRendererToggleSetActive", 
		   "cellRendererToggleGetActive", 
		   "cellRendererToggleSetRadio", 
		   "cellRendererToggleGetRadio", 
		   "cellRendererToggleNew", 
		   "cellRendererToggleGetType", 
		   "cellRendererTextSetFixedHeightFromFont", 
		   "cellRendererTextNew", 
		   "cellRendererTextGetType", 
		   "cellRendererGetFixedSize", 
		   "cellRendererSetFixedSize", 
		   "cellRendererStartEditing", 
		   "cellRendererActivate", 
		   "cellRendererRender", 
		   "cellRendererGetSize", 
		   "cellRendererGetType", 
		   "cellRendererModeGetType", 
		   "cellRendererStateGetType", 
		   "cellEditableRemoveWidget", 
		   "cellEditableStartEditing", 
		   "cellTypeGetType", 
		   "cellEditableGetType", 
		   "cellEditableEditingDone"]}
	 ,
	 {class="GtkCellEditableIface",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCellPixText",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCellPixmap",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCellRenderer",
	  ancestor="GtkObject",
	  methods=[
		   "cellRendererPixbufNew", 
		   "cellRendererPixbufGetType", 
		   "cellRendererToggleSetActive", 
		   "cellRendererToggleGetActive", 
		   "cellRendererToggleSetRadio", 
		   "cellRendererToggleGetRadio", 
		   "cellRendererToggleNew", 
		   "cellRendererToggleGetType", 
		   "cellRendererTextSetFixedHeightFromFont", 
		   "cellRendererTextNew", 
		   "cellRendererTextGetType", 
		   "cellRendererGetFixedSize", 
		   "cellRendererSetFixedSize", 
		   "cellRendererStartEditing", 
		   "cellRendererActivate", 
		   "cellRendererRender", 
		   "cellRendererGetSize", 
		   "cellRendererGetType", 
		   "cellRendererModeGetType", 
		   "cellRendererStateGetType"]}
	 ,
	 {class="GtkCellRendererPixbuf",
	  ancestor="GtkCellRenderer",
	  methods=[
		   "cellRendererPixbufNew", 
		   "cellRendererPixbufGetType"]}
	 ,
	 {class="GtkCellRendererText",
	  ancestor="GtkCellRenderer",
	  methods=[
		   "cellRendererTextSetFixedHeightFromFont", 
		   "cellRendererTextNew", 
		   "cellRendererTextGetType"]}
	 ,
	 {class="GtkCellRendererToggle",
	  ancestor="GtkCellRenderer",
	  methods=[
		   "cellRendererToggleSetActive", 
		   "cellRendererToggleGetActive", 
		   "cellRendererToggleSetRadio", 
		   "cellRendererToggleGetRadio", 
		   "cellRendererToggleNew", 
		   "cellRendererToggleGetType"]}
	 ,
	 {class="GtkCellText",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCellWidget",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkCheckButton",
	  ancestor="GtkToggleButton",
	  methods=[
		   "checkButtonNewWithMnemonic", 
		   "checkButtonNewWithLabel", 
		   "checkButtonNew", 
		   "checkButtonGetType"]}
	 ,
	 {class="GtkCheckMenuItem",
	  ancestor="GtkMenuItem",
	  methods=[
		   "checkMenuItemSetShowToggle", 
		   "checkMenuItemGetInconsistent", 
		   "checkMenuItemToggled", 
		   "checkMenuItemSetInconsistent", 
		   "checkMenuItemGetActive", 
		   "checkMenuItemSetActive", 
		   "checkMenuItemNewWithMnemonic", 
		   "checkMenuItemNewWithLabel", 
		   "checkMenuItemNew", 
		   "checkMenuItemGetType"]}
	 ,
	 {class="GtkColorSelection",
	  ancestor="GtkVBox",
	  methods=[
		   "colorSelectionDialogNew", 
		   "colorSelectionDialogGetType", 
		   "colorSelectionSetUpdatePolicy", 
		   "colorSelectionGetColor", 
		   "colorSelectionSetColor", 
		   "colorSelectionSetChangePaletteWithScreenHook", 
		   "colorSelectionSetChangePaletteHook", 
		   "colorSelectionPaletteToString", 
		   "colorSelectionPaletteFromString", 
		   "colorSelectionIsAdjusting", 
		   "colorSelectionGetPreviousAlpha", 
		   "colorSelectionGetPreviousColor", 
		   "colorSelectionSetPreviousAlpha", 
		   "colorSelectionSetPreviousColor", 
		   "colorSelectionGetCurrentAlpha", 
		   "colorSelectionGetCurrentColor", 
		   "colorSelectionSetCurrentAlpha", 
		   "colorSelectionSetCurrentColor", 
		   "colorSelectionSetHasPalette", 
		   "colorSelectionGetHasPalette", 
		   "colorSelectionSetHasOpacityControl", 
		   "colorSelectionGetHasOpacityControl", 
		   "colorSelectionNew", 
		   "colorSelectionGetType"]}
	 ,
	 {class="GtkColorSelectionDialog",
	  ancestor="GtkDialog",
	  methods=[
		   "colorSelectionDialogNew", 
		   "colorSelectionDialogGetType"]}
	 ,
	 {class="GtkCombo",
	  ancestor="GtkHBox",
	  methods=[
		   "comboDisableActivate", 
		   "comboSetPopdownStrings", 
		   "comboSetItemString", 
		   "comboSetCaseSensitive", 
		   "comboSetUseArrowsAlways", 
		   "comboSetUseArrows", 
		   "comboSetValueInList", 
		   "comboNew", 
		   "comboGetType"]}
	 ,
	 {class="GtkContainer",
	  ancestor="GtkWidget",
	  methods=[
		   "containerGetFocusChain", 
		   "containerSetFocusChain", 
		   "containerPropagateExpose", 
		   "containerGetChildren", 
		   "containerForeachFull", 
		   "containerForeach", 
		   "containerCheckResize", 
		   "containerGetResizeMode", 
		   "containerSetResizeMode", 
		   "containerRemove", 
		   "containerAdd", 
		   "containerGetBorderWidth", 
		   "containerSetBorderWidth", 
		   "containerGetType", 
		   "containerForall", 
		   "containerChildGetProperty", 
		   "containerChildSetProperty", 
		   "containerChildGet", 
		   "containerChildSet", 
		   "containerAddWithProperties", 
		   "containerClassListChildProperties", 
		   "containerClassFindChildProperty", 
		   "containerClassInstallChildProperty", 
		   "containerChildType", 
		   "containerResizeChildren", 
		   "containerGetFocusHadjustment", 
		   "containerSetFocusHadjustment", 
		   "containerGetFocusVadjustment", 
		   "containerSetFocusVadjustment", 
		   "containerSetFocusChild", 
		   "containerSetReallocateRedraws", 
		   "containerUnsetFocusChain"]}
	 ,
	 {class="GtkCurve",
	  ancestor="GtkDrawingArea",
	  methods=[
		   "curveSetCurveType", 
		   "curveSetVector", 
		   "curveGetVector", 
		   "curveSetRange", 
		   "curveSetGamma", 
		   "curveReset", 
		   "curveNew", 
		   "curveGetType", 
		   "curveTypeGetType"]}
	 ,
	 {class="GtkDialog",
	  ancestor="GtkWindow",
	  methods=[
		   "dialogRun", 
		   "dialogResponse", 
		   "dialogGetHasSeparator", 
		   "dialogSetHasSeparator", 
		   "dialogSetDefaultResponse", 
		   "dialogSetResponseSensitive", 
		   "dialogAddButtons", 
		   "dialogAddButton", 
		   "dialogAddActionWidget", 
		   "dialogNewWithButtons", 
		   "dialogNew", 
		   "dialogGetType", 
		   "dialogFlagsGetType"]}
	 ,
	 {class="GtkDrawingArea",
	  ancestor="GtkWidget",
	  methods=[
		   "drawingAreaSize", 
		   "drawingAreaNew", 
		   "drawingAreaGetType"]}
	 ,
	 {class="GtkEntry",
	  ancestor="GtkWidget",
	  methods=[
		   "entrySetEditable", 
		   "entrySetPosition", 
		   "entrySelectRegion", 
		   "entryAppendText", 
		   "entryNewWithMaxLength", 
		   "entryGetLayoutOffsets", 
		   "entryPrependText", 
		   "entryGetText", 
		   "entrySetText", 
		   "entryGetWidthChars", 
		   "entryGetLayout", 
		   "entryGetActivatesDefault", 
		   "entryGetMaxLength", 
		   "entrySetMaxLength", 
		   "entrySetActivatesDefault", 
		   "entryGetHasFrame", 
		   "entrySetHasFrame", 
		   "entryGetInvisibleChar", 
		   "entrySetInvisibleChar", 
		   "entryGetVisibility", 
		   "entrySetVisibility", 
		   "entryNew", 
		   "entryGetType", 
		   "entrySetWidthChars"]}
	 ,
	 {class="GtkEventBox",
	  ancestor="GtkBin",
	  methods=[
		   "eventBoxNew", 
		   "eventBoxGetType"]}
	 ,
	 {class="GtkFileSelection",
	  ancestor="GtkDialog",
	  methods=[
		   "fileSelectionGetSelectMultiple", 
		   "fileSelectionSetSelectMultiple", 
		   "fileSelectionGetSelections", 
		   "fileSelectionHideFileopButtons", 
		   "fileSelectionShowFileopButtons", 
		   "fileSelectionComplete", 
		   "fileSelectionGetFilename", 
		   "fileSelectionSetFilename", 
		   "fileSelectionNew", 
		   "fileSelectionGetType"]}
	 ,
	 {class="GtkFixed",
	  ancestor="GtkContainer",
	  methods=[
		   "fixedGetHasWindow", 
		   "fixedSetHasWindow", 
		   "fixedMove", 
		   "fixedPut", 
		   "fixedNew", 
		   "fixedGetType"]}
	 ,
	 {class="GtkFixedChild",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkFontSelection",
	  ancestor="GtkVBox",
	  methods=[
		   "fontSelectionDialogSetPreviewText", 
		   "fontSelectionDialogGetPreviewText", 
		   "fontSelectionDialogSetFontName", 
		   "fontSelectionDialogGetFont", 
		   "fontSelectionDialogGetFontName", 
		   "fontSelectionDialogNew", 
		   "fontSelectionDialogGetType", 
		   "fontSelectionSetPreviewText", 
		   "fontSelectionGetPreviewText", 
		   "fontSelectionSetFontName", 
		   "fontSelectionGetFont", 
		   "fontSelectionGetFontName", 
		   "fontSelectionNew", 
		   "fontSelectionGetType"]}
	 ,
	 {class="GtkFontSelectionDialog",
	  ancestor="GtkDialog",
	  methods=[
		   "fontSelectionDialogSetPreviewText", 
		   "fontSelectionDialogGetPreviewText", 
		   "fontSelectionDialogSetFontName", 
		   "fontSelectionDialogGetFont", 
		   "fontSelectionDialogGetFontName", 
		   "fontSelectionDialogNew", 
		   "fontSelectionDialogGetType"]}
	 ,
	 {class="GtkFrame",
	  ancestor="GtkBin",
	  methods=[
		   "frameGetShadowType", 
		   "frameSetShadowType", 
		   "frameGetLabelAlign", 
		   "frameSetLabelAlign", 
		   "frameGetLabelWidget", 
		   "frameSetLabelWidget", 
		   "frameGetLabel", 
		   "frameSetLabel", 
		   "frameNew", 
		   "frameGetType"]}
	 ,
	 {class="GtkGammaCurve",
	  ancestor="GtkVBox",
	  methods=[
		   "gammaCurveNew", 
		   "gammaCurveGetType"]}
	 ,
	 {class="GtkHBox",
	  ancestor="GtkBox",
	  methods=[
		   "hboxNew", 
		   "hboxGetType"]}
	 ,
	 {class="GtkHButtonBox",
	  ancestor="GtkButtonBox",
	  methods=[
		   "hbuttonBoxSetSpacingDefault", 
		   "hbuttonBoxSetLayoutDefault", 
		   "hbuttonBoxGetLayoutDefault", 
		   "hbuttonBoxGetSpacingDefault", 
		   "hbuttonBoxNew", 
		   "hbuttonBoxGetType"]}
	 ,
	 {class="GtkHPaned",
	  ancestor="GtkPaned",
	  methods=[
		   "hpanedNew", 
		   "hpanedGetType"]}
	 ,
	 {class="GtkHRuler",
	  ancestor="GtkRuler",
	  methods=[
		   "hrulerNew", 
		   "hrulerGetType"]}
	 ,
	 {class="GtkHScale",
	  ancestor="GtkScale",
	  methods=[
		   "hscaleNewWithRange", 
		   "hscaleNew", 
		   "hscaleGetType"]}
	 ,
	 {class="GtkHScrollbar",
	  ancestor="GtkScrollbar",
	  methods=[
		   "hscrollbarNew", 
		   "hscrollbarGetType"]}
	 ,
	 {class="GtkHSeparator",
	  ancestor="GtkSeparator",
	  methods=[
		   "hseparatorNew", 
		   "hseparatorGetType"]}
	 ,
	 {class="GtkHandleBox",
	  ancestor="GtkBin",
	  methods=[
		   "handleBoxGetSnapEdge", 
		   "handleBoxSetSnapEdge", 
		   "handleBoxGetHandlePosition", 
		   "handleBoxSetHandlePosition", 
		   "handleBoxGetShadowType", 
		   "handleBoxSetShadowType", 
		   "handleBoxNew", 
		   "handleBoxGetType"]}
	 ,
	 {class="GtkIMContext",
	  ancestor="GtkOzBase",
	  methods=[
		   "imContextSimpleAddTable", 
		   "imContextSimpleNew", 
		   "imContextSimpleGetType", 
		   "imContextDeleteSurrounding", 
		   "imContextGetSurrounding", 
		   "imContextSetSurrounding", 
		   "imContextSetUsePreedit", 
		   "imContextSetCursorLocation", 
		   "imContextReset", 
		   "imContextFocusOut", 
		   "imContextFocusIn", 
		   "imContextFilterKeypress", 
		   "imContextGetPreeditString", 
		   "imContextSetClientWindow", 
		   "imContextGetType"]}
	 ,
	 {class="GtkIMContextSimple",
	  ancestor="GtkIMContext",
	  methods=[
		   "imContextSimpleAddTable", 
		   "imContextSimpleNew", 
		   "imContextSimpleGetType"]}
	 ,
	 {class="GtkIMMulticontext",
	  ancestor="GtkIMContext",
	  methods=[
		   "imMulticontextAppendMenuitems", 
		   "imMulticontextNew", 
		   "imMulticontextGetType"]}
	 ,
	 {class="GtkIconFactory",
	  ancestor="GtkOzBase",
	  methods=[
		   "iconFactoryLookupDefault", 
		   "iconFactoryRemoveDefault", 
		   "iconFactoryAddDefault", 
		   "iconFactoryLookup", 
		   "iconFactoryAdd", 
		   "iconFactoryNew", 
		   "iconFactoryGetType"]}
	 ,
	 {class="GtkImage",
	  ancestor="GtkMisc",
	  methods=[
		   "imageMenuItemGetImage", 
		   "imageMenuItemSetImage", 
		   "imageMenuItemNewFromStock", 
		   "imageMenuItemNewWithMnemonic", 
		   "imageMenuItemNewWithLabel", 
		   "imageMenuItemNew", 
		   "imageMenuItemGetType", 
		   "imageGet", 
		   "imageSet", 
		   "imageGetAnimation", 
		   "imageGetIconSet", 
		   "imageGetStock", 
		   "imageGetPixbuf", 
		   "imageGetImage", 
		   "imageGetPixmap", 
		   "imageGetStorageType", 
		   "imageSetFromAnimation", 
		   "imageSetFromIconSet", 
		   "imageSetFromStock", 
		   "imageSetFromPixbuf", 
		   "imageSetFromFile", 
		   "imageSetFromImage", 
		   "imageSetFromPixmap", 
		   "imageNewFromAnimation", 
		   "imageNewFromIconSet", 
		   "imageNewFromStock", 
		   "imageNewFromPixbuf", 
		   "imageNewFromFile", 
		   "imageNewFromImage", 
		   "imageNewFromPixmap", 
		   "imageNew", 
		   "imageGetType", 
		   "imageTypeGetType"]}
	 ,
	 {class="GtkImageAnimationData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkImageIconSetData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkImageImageData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkImageMenuItem",
	  ancestor="GtkMenuItem",
	  methods=[
		   "imageMenuItemGetImage", 
		   "imageMenuItemSetImage", 
		   "imageMenuItemNewFromStock", 
		   "imageMenuItemNewWithMnemonic", 
		   "imageMenuItemNewWithLabel", 
		   "imageMenuItemNew", 
		   "imageMenuItemGetType"]}
	 ,
	 {class="GtkImagePixbufData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkImagePixmapData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkImageStockData",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkInputDialog",
	  ancestor="GtkDialog",
	  methods=[
		   "inputDialogNew", 
		   "inputDialogGetType"]}
	 ,
	 {class="GtkInvisible",
	  ancestor="GtkWidget",
	  methods=[
		   "invisibleGetScreen", 
		   "invisibleSetScreen", 
		   "invisibleNewForScreen", 
		   "invisibleNew", 
		   "invisibleGetType"]}
	 ,
	 {class="GtkItem",
	  ancestor="GtkBin",
	  methods=[
		   "itemFactoriesPathDelete", 
		   "itemFactoryCreateMenuEntries", 
		   "itemFactoryFromPath", 
		   "itemFactoryCreateItemsAc", 
		   "itemFactorySetTranslateFunc", 
		   "itemFactoryPopupDataFromWidget", 
		   "itemFactoryPopupData", 
		   "itemFactoryPopupWithData", 
		   "itemFactoryPopup", 
		   "itemFactoryDeleteEntries", 
		   "itemFactoryDeleteEntry", 
		   "itemFactoryDeleteItem", 
		   "itemFactoryCreateItems", 
		   "itemFactoryCreateItem", 
		   "itemFactoryGetItemByAction", 
		   "itemFactoryGetWidgetByAction", 
		   "itemFactoryGetWidget", 
		   "itemFactoryGetItem", 
		   "itemFactoryPathFromWidget", 
		   "itemFactoryFromWidget", 
		   "itemFactoryAddForeign", 
		   "itemFactoryConstruct", 
		   "itemFactoryNew", 
		   "itemFactoryGetType", 
		   "itemToggle", 
		   "itemDeselect", 
		   "itemSelect", 
		   "itemGetType"]}
	 ,
	 {class="GtkItemFactory",
	  ancestor="GtkObject",
	  methods=[
		   "itemFactoryCreateMenuEntries", 
		   "itemFactoryFromPath", 
		   "itemFactoryCreateItemsAc", 
		   "itemFactorySetTranslateFunc", 
		   "itemFactoryPopupDataFromWidget", 
		   "itemFactoryPopupData", 
		   "itemFactoryPopupWithData", 
		   "itemFactoryPopup", 
		   "itemFactoryDeleteEntries", 
		   "itemFactoryDeleteEntry", 
		   "itemFactoryDeleteItem", 
		   "itemFactoryCreateItems", 
		   "itemFactoryCreateItem", 
		   "itemFactoryGetItemByAction", 
		   "itemFactoryGetWidgetByAction", 
		   "itemFactoryGetWidget", 
		   "itemFactoryGetItem", 
		   "itemFactoryPathFromWidget", 
		   "itemFactoryFromWidget", 
		   "itemFactoryAddForeign", 
		   "itemFactoryConstruct", 
		   "itemFactoryNew", 
		   "itemFactoryGetType"]}
	 ,
	 {class="GtkItemFactoryEntry",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkItemFactoryItem",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkLabel",
	  ancestor="GtkMisc",
	  methods=[
		   "labelParseUline", 
		   "labelGet", 
		   "labelGetLayoutOffsets", 
		   "labelGetLayout", 
		   "labelGetSelectionBounds", 
		   "labelSelectRegion", 
		   "labelGetSelectable", 
		   "labelSetSelectable", 
		   "labelGetLineWrap", 
		   "labelSetLineWrap", 
		   "labelSetPattern", 
		   "labelGetJustify", 
		   "labelSetJustify", 
		   "labelSetTextWithMnemonic", 
		   "labelGetMnemonicWidget", 
		   "labelSetMnemonicWidget", 
		   "labelGetMnemonicKeyval", 
		   "labelSetMarkupWithMnemonic", 
		   "labelGetUseUnderline", 
		   "labelSetUseUnderline", 
		   "labelGetUseMarkup", 
		   "labelSetUseMarkup", 
		   "labelSetMarkup", 
		   "labelGetLabel", 
		   "labelSetLabel", 
		   "labelGetAttributes", 
		   "labelSetAttributes", 
		   "labelGetText", 
		   "labelSetText", 
		   "labelNewWithMnemonic", 
		   "labelNew", 
		   "labelGetType"]}
	 ,
	 {class="GtkLayout",
	  ancestor="GtkContainer",
	  methods=[
		   "layoutThaw", 
		   "layoutFreeze", 
		   "layoutSetVadjustment", 
		   "layoutSetHadjustment", 
		   "layoutGetVadjustment", 
		   "layoutGetHadjustment", 
		   "layoutGetSize", 
		   "layoutSetSize", 
		   "layoutMove", 
		   "layoutPut", 
		   "layoutNew", 
		   "layoutGetType"]}
	 ,
	 {class="GtkList",
	  ancestor="GtkContainer",
	  methods=[
		   "listEndDragSelection", 
		   "listUndoSelection", 
		   "listToggleRow", 
		   "listToggleFocusRow", 
		   "listToggleAddMode", 
		   "listScrollVertical", 
		   "listScrollHorizontal", 
		   "listUnselectAll", 
		   "listSelectAll", 
		   "listEndSelection", 
		   "listStartSelection", 
		   "listExtendSelection", 
		   "listSetSelectionMode", 
		   "listChildPosition", 
		   "listUnselectChild", 
		   "listSelectChild", 
		   "listUnselectItem", 
		   "listSelectItem", 
		   "listClearItems", 
		   "listRemoveItemsNoUnref", 
		   "listRemoveItems", 
		   "listPrependItems", 
		   "listAppendItems", 
		   "listInsertItems", 
		   "listNew", 
		   "listGetType", 
		   "listItemDeselect", 
		   "listItemSelect", 
		   "listItemNewWithLabel", 
		   "listItemNew", 
		   "listItemGetType", 
		   "listStoreMoveBefore", 
		   "listStoreMoveAfter", 
		   "listStoreIterIsValid", 
		   "listStoreSwap", 
		   "listStoreAppend", 
		   "listStorePrepend", 
		   "listStoreReorder", 
		   "listStoreInsertBefore", 
		   "listStoreInsert", 
		   "listStoreSet", 
		   "listStoreSetValue", 
		   "listStoreRemove", 
		   "listStoreInsertAfter", 
		   "listStoreSetColumnTypes", 
		   "listStoreClear", 
		   "listStoreNewv", 
		   "listStoreNew", 
		   "listStoreGetType"]}
	 ,
	 {class="GtkListItem",
	  ancestor="GtkItem",
	  methods=[
		   "listItemDeselect", 
		   "listItemSelect", 
		   "listItemNewWithLabel", 
		   "listItemNew", 
		   "listItemGetType"]}
	 ,
	 {class="GtkListStore",
	  ancestor="GtkOzBase",
	  methods=[
		   "listStoreMoveBefore", 
		   "listStoreMoveAfter", 
		   "listStoreIterIsValid", 
		   "listStoreSwap", 
		   "listStoreAppend", 
		   "listStorePrepend", 
		   "listStoreReorder", 
		   "listStoreInsertBefore", 
		   "listStoreInsert", 
		   "listStoreSet", 
		   "listStoreSetValue", 
		   "listStoreRemove", 
		   "listStoreInsertAfter", 
		   "listStoreSetColumnTypes", 
		   "listStoreClear", 
		   "listStoreNewv", 
		   "listStoreNew", 
		   "listStoreGetType"]}
	 ,
	 {class="GtkMenu",
	  ancestor="GtkMenuShell",
	  methods=[
		   "menuItemSetAccelPath", 
		   "menuItemGetRightJustified", 
		   "menuItemSetRightJustified", 
		   "menuItemToggleSizeAllocate", 
		   "menuItemToggleSizeRequest", 
		   "menuItemActivate", 
		   "menuItemDeselect", 
		   "menuItemSelect", 
		   "menuItemRemoveSubmenu", 
		   "menuItemGetSubmenu", 
		   "menuItemSetSubmenu", 
		   "menuItemNewWithMnemonic", 
		   "menuItemNewWithLabel", 
		   "menuItemNew", 
		   "menuItemGetType", 
		   "menuDirectionTypeGetType", 
		   "menuSetScreen", 
		   "menuReorderChild", 
		   "menuGetTitle", 
		   "menuSetTitle", 
		   "menuGetTearoffState", 
		   "menuSetTearoffState", 
		   "menuGetAttachWidget", 
		   "menuDetach", 
		   "menuAttachToWidget", 
		   "menuSetAccelPath", 
		   "menuGetAccelGroup", 
		   "menuSetAccelGroup", 
		   "menuSetActive", 
		   "menuGetActive", 
		   "menuPopdown", 
		   "menuReposition", 
		   "menuPopup", 
		   "menuNew", 
		   "menuGetType", 
		   "menuShellSelectFirst", 
		   "menuShellActivateItem", 
		   "menuShellDeselect", 
		   "menuShellSelectItem", 
		   "menuShellDeactivate", 
		   "menuShellInsert", 
		   "menuShellPrepend", 
		   "menuShellAppend", 
		   "menuShellGetType", 
		   "menuBarNew", 
		   "menuBarGetType"]}
	 ,
	 {class="GtkMenuBar",
	  ancestor="GtkMenuShell",
	  methods=[
		   "menuBarNew", 
		   "menuBarGetType"]}
	 ,
	 {class="GtkMenuEntry",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkMenuItem",
	  ancestor="GtkItem",
	  methods=[
		   "menuItemSetAccelPath", 
		   "menuItemGetRightJustified", 
		   "menuItemSetRightJustified", 
		   "menuItemToggleSizeAllocate", 
		   "menuItemToggleSizeRequest", 
		   "menuItemActivate", 
		   "menuItemDeselect", 
		   "menuItemSelect", 
		   "menuItemRemoveSubmenu", 
		   "menuItemGetSubmenu", 
		   "menuItemSetSubmenu", 
		   "menuItemNewWithMnemonic", 
		   "menuItemNewWithLabel", 
		   "menuItemNew", 
		   "menuItemGetType"]}
	 ,
	 {class="GtkMenuShell",
	  ancestor="GtkContainer",
	  methods=[
		   "menuShellSelectFirst", 
		   "menuShellActivateItem", 
		   "menuShellDeselect", 
		   "menuShellSelectItem", 
		   "menuShellDeactivate", 
		   "menuShellInsert", 
		   "menuShellPrepend", 
		   "menuShellAppend", 
		   "menuShellGetType"]}
	 ,
	 {class="GtkMessageDialog",
	  ancestor="GtkDialog",
	  methods=[
		   "messageDialogNew", 
		   "messageDialogGetType"]}
	 ,
	 {class="GtkMisc",
	  ancestor="GtkWidget",
	  methods=[
		   "miscGetPadding", 
		   "miscSetPadding", 
		   "miscGetAlignment", 
		   "miscSetAlignment", 
		   "miscGetType"]}
	 ,
	 {class="GtkNotebook",
	  ancestor="GtkContainer",
	  methods=[
		   "notebookTabGetType", 
		   "notebookReorderChild", 
		   "notebookSetTabLabelPacking", 
		   "notebookQueryTabLabelPacking", 
		   "notebookGetMenuLabelText", 
		   "notebookSetMenuLabelText", 
		   "notebookSetMenuLabel", 
		   "notebookGetMenuLabel", 
		   "notebookGetTabLabelText", 
		   "notebookSetTabLabelText", 
		   "notebookSetTabLabel", 
		   "notebookGetTabLabel", 
		   "notebookPopupDisable", 
		   "notebookPopupEnable", 
		   "notebookGetScrollable", 
		   "notebookSetScrollable", 
		   "notebookSetTabVborder", 
		   "notebookSetTabHborder", 
		   "notebookSetTabBorder", 
		   "notebookSetHomogeneousTabs", 
		   "notebookGetTabPos", 
		   "notebookSetTabPos", 
		   "notebookGetShowTabs", 
		   "notebookSetShowTabs", 
		   "notebookGetShowBorder", 
		   "notebookSetShowBorder", 
		   "notebookPrevPage", 
		   "notebookNextPage", 
		   "notebookSetCurrentPage", 
		   "notebookPageNum", 
		   "notebookGetNPages", 
		   "notebookGetNthPage", 
		   "notebookGetCurrentPage", 
		   "notebookRemovePage", 
		   "notebookInsertPageMenu", 
		   "notebookInsertPage", 
		   "notebookPrependPageMenu", 
		   "notebookPrependPage", 
		   "notebookAppendPageMenu", 
		   "notebookAppendPage", 
		   "notebookNew", 
		   "notebookGetType"]}
	 ,
	 {class="GtkObject",
	  ancestor="GtkOzBase",
	  methods=[
		   "objectAddArgType", 
		   "objectSet", 
		   "objectGet", 
		   "objectRemoveNoNotifyById", 
		   "objectGetDataById", 
		   "objectRemoveDataById", 
		   "objectSetDataById", 
		   "objectSetDataByIdFull", 
		   "objectGetUserData", 
		   "objectSetUserData", 
		   "objectRemoveNoNotify", 
		   "objectGetData", 
		   "objectRemoveData", 
		   "objectSetDataFull", 
		   "objectSetData", 
		   "objectWeakunref", 
		   "objectWeakref", 
		   "objectUnref", 
		   "objectRef", 
		   "objectDestroy", 
		   "objectSink", 
		   "objectNew", 
		   "objectGetType", 
		   "objectFlagsGetType"]}
	 ,
	 {class="GtkOldEditable",
	  ancestor="GtkWidget",
	  methods=[
		   "oldEditableChanged", 
		   "oldEditableClaimSelection", 
		   "oldEditableGetType"]}
	 ,
	 {class="GtkOptionMenu",
	  ancestor="GtkButton",
	  methods=[
		   "optionMenuSetHistory", 
		   "optionMenuGetHistory", 
		   "optionMenuRemoveMenu", 
		   "optionMenuSetMenu", 
		   "optionMenuGetMenu", 
		   "optionMenuNew", 
		   "optionMenuGetType"]}
	 ,
	 {class="GtkPaned",
	  ancestor="GtkContainer",
	  methods=[
		   "panedComputePosition", 
		   "panedGetPosition", 
		   "panedPack2", 
		   "panedSetPosition", 
		   "panedPack1", 
		   "panedAdd1", 
		   "panedGetType", 
		   "panedAdd2"]}
	 ,
	 {class="GtkPixmap",
	  ancestor="GtkMisc",
	  methods=[
		   "pixmapSetBuildInsensitive", 
		   "pixmapGet", 
		   "pixmapSet", 
		   "pixmapNew", 
		   "pixmapGetType"]}
	 ,
	 {class="GtkPlug",
	  ancestor="GtkWindow",
	  methods=[
		   "plugGetId", 
		   "plugNewForDisplay", 
		   "plugConstructForDisplay", 
		   "plugNew", 
		   "plugConstruct", 
		   "plugGetType"]}
	 ,
	 {class="GtkPreview",
	  ancestor="GtkWidget",
	  methods=[
		   "previewTypeGetType", 
		   "previewReset", 
		   "previewGetInfo", 
		   "previewGetCmap", 
		   "previewGetVisual", 
		   "previewSetDither", 
		   "previewSetReserved", 
		   "previewSetInstallCmap", 
		   "previewSetColorCube", 
		   "previewSetGamma", 
		   "previewSetExpand", 
		   "previewDrawRow", 
		   "previewPut", 
		   "previewSize", 
		   "previewNew", 
		   "previewUninit", 
		   "previewGetType"]}
	 ,
	 {class="GtkPreviewInfo",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkProgress",
	  ancestor="GtkWidget",
	  methods=[
		   "progressBarOrientationGetType", 
		   "progressBarStyleGetType", 
		   "progressBarUpdate", 
		   "progressBarSetActivityStep", 
		   "progressBarSetDiscreteBlocks", 
		   "progressBarSetBarStyle", 
		   "progressBarNewWithAdjustment", 
		   "progressBarGetOrientation", 
		   "progressBarGetPulseStep", 
		   "progressBarSetActivityBlocks", 
		   "progressBarGetFraction", 
		   "progressBarGetText", 
		   "progressBarSetOrientation", 
		   "progressBarSetPulseStep", 
		   "progressBarSetFraction", 
		   "progressBarSetText", 
		   "progressBarPulse", 
		   "progressBarNew", 
		   "progressBarGetType", 
		   "progressGetPercentageFromValue", 
		   "progressGetCurrentPercentage", 
		   "progressGetTextFromValue", 
		   "progressGetCurrentText", 
		   "progressSetActivityMode", 
		   "progressGetValue", 
		   "progressSetValue", 
		   "progressSetPercentage", 
		   "progressConfigure", 
		   "progressSetAdjustment", 
		   "progressSetFormatString", 
		   "progressSetTextAlignment", 
		   "progressSetShowText", 
		   "progressGetType"]}
	 ,
	 {class="GtkProgressBar",
	  ancestor="GtkProgress",
	  methods=[
		   "progressBarOrientationGetType", 
		   "progressBarStyleGetType", 
		   "progressBarUpdate", 
		   "progressBarSetActivityStep", 
		   "progressBarSetDiscreteBlocks", 
		   "progressBarSetBarStyle", 
		   "progressBarNewWithAdjustment", 
		   "progressBarGetOrientation", 
		   "progressBarGetPulseStep", 
		   "progressBarSetActivityBlocks", 
		   "progressBarGetFraction", 
		   "progressBarGetText", 
		   "progressBarSetOrientation", 
		   "progressBarSetPulseStep", 
		   "progressBarSetFraction", 
		   "progressBarSetText", 
		   "progressBarPulse", 
		   "progressBarNew", 
		   "progressBarGetType"]}
	 ,
	 {class="GtkRadioButton",
	  ancestor="GtkCheckButton",
	  methods=[
		   "radioButtonSetGroup", 
		   "radioButtonGetGroup", 
		   "radioButtonNewWithMnemonicFromWidget", 
		   "radioButtonNewWithMnemonic", 
		   "radioButtonNewWithLabelFromWidget", 
		   "radioButtonNewWithLabel", 
		   "radioButtonNewFromWidget", 
		   "radioButtonNew", 
		   "radioButtonGetType"]}
	 ,
	 {class="GtkRadioMenuItem",
	  ancestor="GtkCheckMenuItem",
	  methods=[
		   "radioMenuItemSetGroup", 
		   "radioMenuItemGetGroup", 
		   "radioMenuItemNewWithMnemonic", 
		   "radioMenuItemNewWithLabel", 
		   "radioMenuItemNew", 
		   "radioMenuItemGetType"]}
	 ,
	 {class="GtkRange",
	  ancestor="GtkWidget",
	  methods=[
		   "rangeGetValue", 
		   "rangeSetValue", 
		   "rangeSetRange", 
		   "rangeSetIncrements", 
		   "rangeGetInverted", 
		   "rangeSetInverted", 
		   "rangeGetAdjustment", 
		   "rangeSetAdjustment", 
		   "rangeGetUpdatePolicy", 
		   "rangeSetUpdatePolicy", 
		   "rangeGetType"]}
	 ,
	 {class="GtkRcProperty",
	  ancestor="GtkOzBase",
	  methods=[
		   "rcPropertyParseBorder", 
		   "rcPropertyParseRequisition", 
		   "rcPropertyParseFlags", 
		   "rcPropertyParseEnum", 
		   "rcPropertyParseColor"]}
	 ,
	 {class="GtkRcStyle",
	  ancestor="GtkOzBase",
	  methods=[
		   "rcStyleUnref", 
		   "rcStyleRef", 
		   "rcStyleCopy", 
		   "rcStyleNew", 
		   "rcStyleGetType"]}
	 ,
	 {class="GtkRequisition",
	  ancestor="GtkOzBase",
	  methods=[
		   "requisitionFree", 
		   "requisitionCopy", 
		   "requisitionGetType"]}
	 ,
	 {class="GtkRuler",
	  ancestor="GtkWidget",
	  methods=[
		   "rulerGetRange", 
		   "rulerGetMetric", 
		   "rulerDrawPos", 
		   "rulerDrawTicks", 
		   "rulerSetRange", 
		   "rulerSetMetric", 
		   "rulerGetType"]}
	 ,
	 {class="GtkRulerMetric",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkScale",
	  ancestor="GtkRange",
	  methods=[
		   "scaleGetValuePos", 
		   "scaleSetValuePos", 
		   "scaleGetDrawValue", 
		   "scaleSetDrawValue", 
		   "scaleGetDigits", 
		   "scaleSetDigits", 
		   "scaleGetType"]}
	 ,
	 {class="GtkScrollbar",
	  ancestor="GtkRange",
	  methods=[
		   "scrollbarGetType"]}
	 ,
	 {class="GtkScrolledWindow",
	  ancestor="GtkBin",
	  methods=[
		   "scrolledWindowAddWithViewport", 
		   "scrolledWindowGetShadowType", 
		   "scrolledWindowSetShadowType", 
		   "scrolledWindowGetPlacement", 
		   "scrolledWindowSetPlacement", 
		   "scrolledWindowGetPolicy", 
		   "scrolledWindowSetPolicy", 
		   "scrolledWindowGetVadjustment", 
		   "scrolledWindowGetHadjustment", 
		   "scrolledWindowSetVadjustment", 
		   "scrolledWindowSetHadjustment", 
		   "scrolledWindowNew", 
		   "scrolledWindowGetType"]}
	 ,
	 {class="GtkSelectionData",
	  ancestor="GtkOzBase",
	  methods=[
		   "selectionDataFree", 
		   "selectionDataGetType", 
		   "selectionDataCopy", 
		   "selectionDataTargetsIncludeText", 
		   "selectionDataGetText", 
		   "selectionDataGetTargets", 
		   "selectionDataSetText", 
		   "selectionDataSet"]}
	 ,
	 {class="GtkSeparator",
	  ancestor="GtkWidget",
	  methods=[
		   "separatorGetType", 
		   "separatorMenuItemNew", 
		   "separatorMenuItemGetType"]}
	 ,
	 {class="GtkSeparatorMenuItem",
	  ancestor="GtkMenuItem",
	  methods=[
		   "separatorMenuItemNew", 
		   "separatorMenuItemGetType"]}
	 ,
	 {class="GtkSettings",
	  ancestor="GtkOzBase",
	  methods=[
		   "settingsSetDoubleProperty", 
		   "settingsSetLongProperty", 
		   "settingsSetStringProperty", 
		   "settingsSetPropertyValue", 
		   "settingsInstallPropertyParser", 
		   "settingsInstallProperty", 
		   "settingsGetForScreen", 
		   "settingsGetDefault", 
		   "settingsGetType"]}
	 ,
	 {class="GtkSettingsValue",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkSizeGroup",
	  ancestor="GtkOzBase",
	  methods=[
		   "sizeGroupModeGetType", 
		   "sizeGroupRemoveWidget", 
		   "sizeGroupAddWidget", 
		   "sizeGroupGetMode", 
		   "sizeGroupSetMode", 
		   "sizeGroupNew", 
		   "sizeGroupGetType"]}
	 ,
	 {class="GtkSocket",
	  ancestor="GtkContainer",
	  methods=[
		   "socketSteal", 
		   "socketGetId", 
		   "socketAddId", 
		   "socketNew", 
		   "socketGetType"]}
	 ,
	 {class="GtkSpinButton",
	  ancestor="GtkEntry",
	  methods=[
		   "spinButtonUpdatePolicyGetType", 
		   "spinButtonUpdate", 
		   "spinButtonSetSnapToTicks", 
		   "spinButtonGetWrap", 
		   "spinButtonSetWrap", 
		   "spinButtonGetNumeric", 
		   "spinButtonSpin", 
		   "spinButtonSetNumeric", 
		   "spinButtonSetUpdatePolicy", 
		   "spinButtonGetUpdatePolicy", 
		   "spinButtonSetValue", 
		   "spinButtonGetSnapToTicks", 
		   "spinButtonGetValueAsInt", 
		   "spinButtonGetValue", 
		   "spinButtonGetRange", 
		   "spinButtonSetRange", 
		   "spinButtonSetIncrements", 
		   "spinButtonGetIncrements", 
		   "spinButtonGetDigits", 
		   "spinButtonGetAdjustment", 
		   "spinButtonSetDigits", 
		   "spinButtonSetAdjustment", 
		   "spinButtonNewWithRange", 
		   "spinButtonConfigure", 
		   "spinButtonGetType", 
		   "spinButtonNew"]}
	 ,
	 {class="GtkStatusbar",
	  ancestor="GtkHBox",
	  methods=[
		   "statusbarSetHasResizeGrip", 
		   "statusbarPop", 
		   "statusbarGetContextId", 
		   "statusbarNew", 
		   "statusbarGetType", 
		   "statusbarGetHasResizeGrip", 
		   "statusbarPush", 
		   "statusbarRemove"]}
	 ,
	 {class="GtkStockItem",
	  ancestor="GtkOzBase",
	  methods=[
		   "stockItemFree", 
		   "stockItemCopy"]}
	 ,
	 {class="GtkStyle",
	  ancestor="GtkOzBase",
	  methods=[
		   "styleRenderIcon", 
		   "styleLookupIconSet", 
		   "styleApplyDefaultBackground", 
		   "styleSetBackground", 
		   "styleSetFont", 
		   "styleGetFont", 
		   "styleUnref", 
		   "styleRef", 
		   "styleDetach", 
		   "styleAttach", 
		   "styleCopy", 
		   "styleNew", 
		   "styleGetType"]}
	 ,
	 {class="GtkTable",
	  ancestor="GtkContainer",
	  methods=[
		   "tableGetHomogeneous", 
		   "tableSetHomogeneous", 
		   "tableGetDefaultColSpacing", 
		   "tableSetColSpacings", 
		   "tableSetRowSpacings", 
		   "tableGetDefaultRowSpacing", 
		   "tableGetColSpacing", 
		   "tableSetColSpacing", 
		   "tableGetRowSpacing", 
		   "tableSetRowSpacing", 
		   "tableAttachDefaults", 
		   "tableAttach", 
		   "tableResize", 
		   "tableNew", 
		   "tableGetType"]}
	 ,
	 {class="GtkTableChild",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTableRowCol",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTargetEntry",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTargetList",
	  ancestor="GtkOzBase",
	  methods=[
		   "targetListFind", 
		   "targetListRemove", 
		   "targetListAddTable", 
		   "targetListUnref", 
		   "targetListAdd", 
		   "targetListRef", 
		   "targetListNew"]}
	 ,
	 {class="GtkTargetPair",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTearoffMenuItem",
	  ancestor="GtkMenuItem",
	  methods=[
		   "tearoffMenuItemGetType", 
		   "tearoffMenuItemNew"]}
	 ,
	 {class="GtkTextAppearance",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTextAttributes",
	  ancestor="GtkOzBase",
	  methods=[
		   "textAttributesRef", 
		   "textAttributesCopy", 
		   "textAttributesNew", 
		   "textAttributesUnref", 
		   "textAttributesGetType", 
		   "textAttributesCopyValues"]}
	 ,
	 {class="GtkTextBuffer",
	  ancestor="GtkOzBase",
	  methods=[
		   "textBufferEndUserAction", 
		   "textBufferBeginUserAction", 
		   "textBufferPasteClipboard", 
		   "textBufferCopyClipboard", 
		   "textBufferCutClipboard", 
		   "textBufferGetSelectionBounds", 
		   "textBufferDeleteSelection", 
		   "textBufferAddSelectionClipboard", 
		   "textBufferSetModified", 
		   "textBufferGetModified", 
		   "textBufferGetIterAtChildAnchor", 
		   "textBufferRemoveSelectionClipboard", 
		   "textBufferGetIterAtMark", 
		   "textBufferGetEndIter", 
		   "textBufferGetStartIter", 
		   "textBufferGetIterAtOffset", 
		   "textBufferGetIterAtLineIndex", 
		   "textBufferGetIterAtLine", 
		   "textBufferCreateTag", 
		   "textBufferRemoveAllTags", 
		   "textBufferRemoveTagByName", 
		   "textBufferApplyTagByName", 
		   "textBufferPlaceCursor", 
		   "textBufferGetIterAtLineOffset", 
		   "textBufferGetSelectionBound", 
		   "textBufferRemoveTag", 
		   "textBufferDeleteMarkByName", 
		   "textBufferGetMark", 
		   "textBufferMoveMarkByName", 
		   "textBufferCreateChildAnchor", 
		   "textBufferMoveMark", 
		   "textBufferInsertChildAnchor", 
		   "textBufferGetSlice", 
		   "textBufferGetText", 
		   "textBufferInsertPixbuf", 
		   "textBufferDeleteInteractive", 
		   "textBufferApplyTag", 
		   "textBufferDelete", 
		   "textBufferInsertWithTagsByName", 
		   "textBufferDeleteMark", 
		   "textBufferInsertWithTags", 
		   "textBufferInsertRangeInteractive", 
		   "textBufferInsertRange", 
		   "textBufferInsertInteractiveAtCursor", 
		   "textBufferInsertInteractive", 
		   "textBufferInsertAtCursor", 
		   "textBufferInsert", 
		   "textBufferSetText", 
		   "textBufferGetInsert", 
		   "textBufferGetTagTable", 
		   "textBufferGetCharCount", 
		   "textBufferGetLineCount", 
		   "textBufferNew", 
		   "textBufferGetType", 
		   "textBufferCreateMark", 
		   "textBufferGetBounds"]}
	 ,
	 {class="GtkTextChildAnchor",
	  ancestor="GtkOzBase",
	  methods=[
		   "textChildAnchorGetDeleted", 
		   "textChildAnchorGetWidgets", 
		   "textChildAnchorNew", 
		   "textChildAnchorGetType"]}
	 ,
	 {class="GtkTextIter",
	  ancestor="GtkOzBase",
	  methods=[
		   "textIterOrder", 
		   "textIterInRange", 
		   "textIterCompare", 
		   "textIterEqual", 
		   "textIterBackwardSearch", 
		   "textIterForwardSearch", 
		   "textIterBackwardFindChar", 
		   "textIterForwardFindChar", 
		   "textIterBackwardToTagToggle", 
		   "textIterSetLineIndex", 
		   "textIterSetLine", 
		   "textIterForwardToLineEnd", 
		   "textIterForwardCursorPositions", 
		   "textIterSetVisibleLineIndex", 
		   "textIterBackwardCursorPosition", 
		   "textIterForwardCursorPosition", 
		   "textIterSetLineOffset", 
		   "textIterSetOffset", 
		   "textIterBackwardSentenceStart", 
		   "textIterForwardSentenceEnd", 
		   "textIterForwardWordEnds", 
		   "textIterForwardWordEnd", 
		   "textIterBackwardWordStart", 
		   "textIterForwardLines", 
		   "textIterBackwardWordStarts", 
		   "textIterBackwardChars", 
		   "textIterBackwardChar", 
		   "textIterForwardChar", 
		   "textIterForwardToTagToggle", 
		   "textIterForwardLine", 
		   "textIterBackwardLine", 
		   "textIterGetLanguage", 
		   "textIterGetBytesInLine", 
		   "textIterIsCursorPosition", 
		   "textIterGetCharsInLine", 
		   "textIterEndsLine", 
		   "textIterStartsLine", 
		   "textIterIsStart", 
		   "textIterIsEnd", 
		   "textIterEndsSentence", 
		   "textIterInsideSentence", 
		   "textIterStartsSentence", 
		   "textIterForwardToEnd", 
		   "textIterInsideWord", 
		   "textIterEndsWord", 
		   "textIterStartsWord", 
		   "textIterGetAttributes", 
		   "textIterCanInsert", 
		   "textIterBackwardSentenceStarts", 
		   "textIterGetTags", 
		   "textIterEditable", 
		   "textIterHasTag", 
		   "textIterBackwardCursorPositions", 
		   "textIterTogglesTag", 
		   "textIterBackwardLines", 
		   "textIterEndsTag", 
		   "textIterForwardSentenceEnds", 
		   "textIterBeginsTag", 
		   "textIterGetChildAnchor", 
		   "textIterGetMarks", 
		   "textIterGetVisibleText", 
		   "textIterGetPixbuf", 
		   "textIterGetText", 
		   "textIterGetVisibleSlice", 
		   "textIterGetChar", 
		   "textIterGetVisibleLineOffset", 
		   "textIterGetToggledTags", 
		   "textIterGetVisibleLineIndex", 
		   "textIterGetLineIndex", 
		   "textIterGetSlice", 
		   "textIterGetLineOffset", 
		   "textIterGetOffset", 
		   "textIterGetType", 
		   "textIterCopy", 
		   "textIterGetBuffer", 
		   "textIterGetLine", 
		   "textIterForwardChars", 
		   "textIterSetVisibleLineOffset", 
		   "textIterFree"]}
	 ,
	 {class="GtkTextMark",
	  ancestor="GtkOzBase",
	  methods=[
		   "textMarkGetLeftGravity", 
		   "textMarkGetBuffer", 
		   "textMarkGetDeleted", 
		   "textMarkGetName", 
		   "textMarkGetVisible", 
		   "textMarkSetVisible", 
		   "textMarkGetType"]}
	 ,
	 {class="GtkTextTag",
	  ancestor="GtkOzBase",
	  methods=[
		   "textTagTableGetSize", 
		   "textTagTableForeach", 
		   "textTagTableLookup", 
		   "textTagTableRemove", 
		   "textTagTableAdd", 
		   "textTagTableGetType", 
		   "textTagTableNew", 
		   "textTagEvent", 
		   "textTagSetPriority", 
		   "textTagGetPriority", 
		   "textTagGetType", 
		   "textTagNew"]}
	 ,
	 {class="GtkTextTagTable",
	  ancestor="GtkOzBase",
	  methods=[
		   "textTagTableGetSize", 
		   "textTagTableForeach", 
		   "textTagTableLookup", 
		   "textTagTableRemove", 
		   "textTagTableAdd", 
		   "textTagTableGetType", 
		   "textTagTableNew"]}
	 ,
	 {class="GtkTextView",
	  ancestor="GtkContainer",
	  methods=[
		   "textViewGetTabs", 
		   "textViewGetDefaultAttributes", 
		   "textViewSetIndent", 
		   "textViewGetRightMargin", 
		   "textViewSetRightMargin", 
		   "textViewGetIndent", 
		   "textViewSetTabs", 
		   "textViewGetLeftMargin", 
		   "textViewSetLeftMargin", 
		   "textViewGetJustification", 
		   "textViewSetJustification", 
		   "textViewGetPixelsInsideWrap", 
		   "textViewSetPixelsInsideWrap", 
		   "textViewGetPixelsBelowLines", 
		   "textViewSetPixelsBelowLines", 
		   "textViewGetPixelsAboveLines", 
		   "textViewSetPixelsAboveLines", 
		   "textViewGetEditable", 
		   "textViewSetEditable", 
		   "textViewGetWrapMode", 
		   "textViewSetWrapMode", 
		   "textViewMoveChild", 
		   "textViewAddChildInWindow", 
		   "textViewAddChildAtAnchor", 
		   "textViewMoveVisually", 
		   "textViewStartsDisplayLine", 
		   "textViewBackwardDisplayLineStart", 
		   "textViewForwardDisplayLineEnd", 
		   "textViewBackwardDisplayLine", 
		   "textViewForwardDisplayLine", 
		   "textViewSetBorderWindowSize", 
		   "textViewGetWindowType", 
		   "textViewGetWindow", 
		   "textViewGetBorderWindowSize", 
		   "textViewWindowToBufferCoords", 
		   "textViewGetLineAtY", 
		   "textViewGetIterAtLocation", 
		   "textViewGetLineYrange", 
		   "textViewBufferToWindowCoords", 
		   "textViewGetCursorVisible", 
		   "textViewGetIterLocation", 
		   "textViewSetCursorVisible", 
		   "textViewGetVisibleRect", 
		   "textViewPlaceCursorOnscreen", 
		   "textViewMoveMarkOnscreen", 
		   "textViewScrollMarkOnscreen", 
		   "textViewScrollToMark", 
		   "textViewScrollToIter", 
		   "textViewGetBuffer", 
		   "textViewSetBuffer", 
		   "textViewNewWithBuffer", 
		   "textViewNew", 
		   "textViewGetType"]}
	 ,
	 {class="GtkTipsQuery",
	  ancestor="GtkLabel",
	  methods=[
		   "tipsQuerySetLabels", 
		   "tipsQuerySetCaller", 
		   "tipsQueryStopQuery", 
		   "tipsQueryStartQuery", 
		   "tipsQueryGetType", 
		   "tipsQueryNew"]}
	 ,
	 {class="GtkToggleButton",
	  ancestor="GtkButton",
	  methods=[
		   "toggleButtonGetInconsistent", 
		   "toggleButtonSetInconsistent", 
		   "toggleButtonToggled", 
		   "toggleButtonGetActive", 
		   "toggleButtonSetActive", 
		   "toggleButtonGetMode", 
		   "toggleButtonSetMode", 
		   "toggleButtonNewWithMnemonic", 
		   "toggleButtonNewWithLabel", 
		   "toggleButtonNew", 
		   "toggleButtonGetType"]}
	 ,
	 {class="GtkToolbar",
	  ancestor="GtkContainer",
	  methods=[
		   "toolbarGetTooltips", 
		   "toolbarGetIconSize", 
		   "toolbarGetStyle", 
		   "toolbarUnsetIconSize", 
		   "toolbarUnsetStyle", 
		   "toolbarGetOrientation", 
		   "toolbarSetTooltips", 
		   "toolbarSetStyle", 
		   "toolbarSetOrientation", 
		   "toolbarPrependWidget", 
		   "toolbarAppendWidget", 
		   "toolbarSetIconSize", 
		   "toolbarInsertElement", 
		   "toolbarInsertWidget", 
		   "toolbarAppendElement", 
		   "toolbarPrependElement", 
		   "toolbarRemoveSpace", 
		   "toolbarInsertSpace", 
		   "toolbarPrependSpace", 
		   "toolbarInsertStock", 
		   "toolbarAppendSpace", 
		   "toolbarInsertItem", 
		   "toolbarPrependItem", 
		   "toolbarAppendItem", 
		   "toolbarNew", 
		   "toolbarGetType", 
		   "toolbarSpaceStyleGetType", 
		   "toolbarChildTypeGetType", 
		   "toolbarStyleGetType"]}
	 ,
	 {class="GtkToolbarChild",
	  ancestor="GtkOzBase",
	  methods=[
		   "toolbarChildTypeGetType"]}
	 ,
	 {class="GtkTooltips",
	  ancestor="GtkObject",
	  methods=[
		   "tooltipsForceWindow", 
		   "tooltipsDataGet", 
		   "tooltipsSetTip", 
		   "tooltipsSetDelay", 
		   "tooltipsDisable", 
		   "tooltipsEnable", 
		   "tooltipsNew", 
		   "tooltipsGetType"]}
	 ,
	 {class="GtkTooltipsData",
	  ancestor="GtkOzBase",
	  methods=[
		   "tooltipsDataGet"]}
	 ,
	 {class="GtkTreeDragDestIface",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTreeDragSourceIface",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTreeIter",
	  ancestor="GtkOzBase",
	  methods=[
		   "treeIterGetType", 
		   "treeIterFree", 
		   "treeIterCopy"]}
	 ,
	 {class="GtkTreeModelIface",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTreeModelSort",
	  ancestor="GtkOzBase",
	  methods=[
		   "treeModelSortIterIsValid", 
		   "treeModelSortClearCache", 
		   "treeModelSortResetDefaultSortFunc", 
		   "treeModelSortConvertIterToChildIter", 
		   "treeModelSortConvertPathToChildPath", 
		   "treeModelSortConvertChildIterToIter", 
		   "treeModelSortNewWithModel", 
		   "treeModelSortGetType", 
		   "treeModelSortConvertChildPathToPath", 
		   "treeModelSortGetModel"]}
	 ,
	 {class="GtkTreeSelection",
	  ancestor="GtkOzBase",
	  methods=[
		   "treeSelectionUnselectRange", 
		   "treeSelectionSelectRange", 
		   "treeSelectionUnselectAll", 
		   "treeSelectionSelectAll", 
		   "treeSelectionIterIsSelected", 
		   "treeSelectionPathIsSelected", 
		   "treeSelectionUnselectIter", 
		   "treeSelectionSelectIter", 
		   "treeSelectionUnselectPath", 
		   "treeSelectionSelectPath", 
		   "treeSelectionSelectedForeach", 
		   "treeSelectionCountSelectedRows", 
		   "treeSelectionGetSelectedRows", 
		   "treeSelectionGetSelected", 
		   "treeSelectionGetTreeView", 
		   "treeSelectionGetUserData", 
		   "treeSelectionSetSelectFunction", 
		   "treeSelectionGetMode", 
		   "treeSelectionSetMode", 
		   "treeSelectionGetType"]}
	 ,
	 {class="GtkTreeSortableIface",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkTreeStore",
	  ancestor="GtkOzBase",
	  methods=[
		   "treeStoreMoveAfter", 
		   "treeStoreMoveBefore", 
		   "treeStoreSwap", 
		   "treeStoreReorder", 
		   "treeStoreIterIsValid", 
		   "treeStoreClear", 
		   "treeStoreIterDepth", 
		   "treeStoreIsAncestor", 
		   "treeStoreAppend", 
		   "treeStorePrepend", 
		   "treeStoreInsertAfter", 
		   "treeStoreInsertBefore", 
		   "treeStoreInsert", 
		   "treeStoreRemove", 
		   "treeStoreSet", 
		   "treeStoreSetValue", 
		   "treeStoreSetColumnTypes", 
		   "treeStoreNewv", 
		   "treeStoreNew", 
		   "treeStoreGetType"]}
	 ,
	 {class="GtkTreeView",
	  ancestor="GtkContainer",
	  methods=[
		   "treeViewSetDestroyCountFunc", 
		   "treeViewSetSearchEqualFunc", 
		   "treeViewGetSearchEqualFunc", 
		   "treeViewSetSearchColumn", 
		   "treeViewGetSearchColumn", 
		   "treeViewGetEnableSearch", 
		   "treeViewSetEnableSearch", 
		   "treeViewCreateRowDragIcon", 
		   "treeViewGetDestRowAtPos", 
		   "treeViewGetDragDestRow", 
		   "treeViewSetDragDestRow", 
		   "treeViewUnsetRowsDragDest", 
		   "treeViewUnsetRowsDragSource", 
		   "treeViewEnableModelDragDest", 
		   "treeViewEnableModelDragSource", 
		   "treeViewTreeToWidgetCoords", 
		   "treeViewWidgetToTreeCoords", 
		   "treeViewGetVisibleRect", 
		   "treeViewGetBackgroundArea", 
		   "treeViewGetCellArea", 
		   "treeViewGetPathAtPos", 
		   "treeViewGetBinWindow", 
		   "treeViewGetCursor", 
		   "treeViewSetCursorOnCell", 
		   "treeViewSetCursor", 
		   "treeViewGetReorderable", 
		   "treeViewSetReorderable", 
		   "treeViewRowExpanded", 
		   "treeViewMapExpandedRows", 
		   "treeViewCollapseRow", 
		   "treeViewExpandRow", 
		   "treeViewExpandToPath", 
		   "treeViewCollapseAll", 
		   "treeViewExpandAll", 
		   "treeViewRowActivated", 
		   "treeViewScrollToCell", 
		   "treeViewScrollToPoint", 
		   "treeViewSetColumnDragFunction", 
		   "treeViewGetExpanderColumn", 
		   "treeViewSetExpanderColumn", 
		   "treeViewMoveColumnAfter", 
		   "treeViewGetColumns", 
		   "treeViewGetColumn", 
		   "treeViewInsertColumnWithDataFunc", 
		   "treeViewInsertColumnWithAttributes", 
		   "treeViewInsertColumn", 
		   "treeViewAppendColumn", 
		   "treeViewGetRulesHint", 
		   "treeViewSetRulesHint", 
		   "treeViewSetHeadersClickable", 
		   "treeViewRemoveColumn", 
		   "treeViewColumnsAutosize", 
		   "treeViewSetHeadersVisible", 
		   "treeViewGetHeadersVisible", 
		   "treeViewSetVadjustment", 
		   "treeViewGetVadjustment", 
		   "treeViewSetHadjustment", 
		   "treeViewGetHadjustment", 
		   "treeViewGetSelection", 
		   "treeViewGetModel", 
		   "treeViewSetModel", 
		   "treeViewNewWithModel", 
		   "treeViewNew", 
		   "treeViewGetType", 
		   "treeViewColumnFocusCell", 
		   "treeViewColumnCellIsVisible", 
		   "treeViewColumnCellGetPosition", 
		   "treeViewColumnCellGetSize", 
		   "treeViewColumnCellSetCellData", 
		   "treeViewColumnGetSortOrder", 
		   "treeViewColumnSetSortOrder", 
		   "treeViewColumnGetSortIndicator", 
		   "treeViewColumnSetSortIndicator", 
		   "treeViewColumnGetSortColumnId", 
		   "treeViewColumnSetSortColumnId", 
		   "treeViewColumnGetReorderable", 
		   "treeViewColumnSetReorderable", 
		   "treeViewColumnSetAlignment", 
		   "treeViewColumnGetWidget", 
		   "treeViewColumnSetClickable", 
		   "treeViewColumnGetClickable", 
		   "treeViewColumnGetTitle", 
		   "treeViewColumnSetTitle", 
		   "treeViewColumnClicked", 
		   "treeViewColumnSetMaxWidth", 
		   "treeViewColumnGetMaxWidth", 
		   "treeViewColumnGetMinWidth", 
		   "treeViewColumnSetMinWidth", 
		   "treeViewColumnSetWidget", 
		   "treeViewColumnSetFixedWidth", 
		   "treeViewColumnGetFixedWidth", 
		   "treeViewColumnGetWidth", 
		   "treeViewColumnSetSizing", 
		   "treeViewColumnSetResizable", 
		   "treeViewColumnGetResizable", 
		   "treeViewColumnGetVisible", 
		   "treeViewColumnGetSpacing", 
		   "treeViewColumnSetSpacing", 
		   "treeViewColumnSetCellDataFunc", 
		   "treeViewColumnClearAttributes", 
		   "treeViewColumnSetVisible", 
		   "treeViewColumnSetAttributes", 
		   "treeViewColumnAddAttribute", 
		   "treeViewColumnGetCellRenderers", 
		   "treeViewColumnClear", 
		   "treeViewColumnPackEnd", 
		   "treeViewColumnPackStart", 
		   "treeViewColumnNewWithAttributes", 
		   "treeViewColumnNew", 
		   "treeViewColumnGetType", 
		   "treeViewColumnGetAlignment", 
		   "treeViewColumnGetSizing", 
		   "treeViewColumnSizingGetType", 
		   "treeViewDropPositionGetType", 
		   "treeViewModeGetType"]}
	 ,
	 {class="GtkTreeViewColumn",
	  ancestor="GtkObject",
	  methods=[
		   "treeViewColumnFocusCell", 
		   "treeViewColumnCellIsVisible", 
		   "treeViewColumnCellGetPosition", 
		   "treeViewColumnCellGetSize", 
		   "treeViewColumnCellSetCellData", 
		   "treeViewColumnGetSortOrder", 
		   "treeViewColumnSetSortOrder", 
		   "treeViewColumnGetSortIndicator", 
		   "treeViewColumnSetSortIndicator", 
		   "treeViewColumnGetSortColumnId", 
		   "treeViewColumnSetSortColumnId", 
		   "treeViewColumnGetReorderable", 
		   "treeViewColumnSetReorderable", 
		   "treeViewColumnSetAlignment", 
		   "treeViewColumnGetWidget", 
		   "treeViewColumnSetClickable", 
		   "treeViewColumnGetClickable", 
		   "treeViewColumnGetTitle", 
		   "treeViewColumnSetTitle", 
		   "treeViewColumnClicked", 
		   "treeViewColumnSetMaxWidth", 
		   "treeViewColumnGetMaxWidth", 
		   "treeViewColumnGetMinWidth", 
		   "treeViewColumnSetMinWidth", 
		   "treeViewColumnSetWidget", 
		   "treeViewColumnSetFixedWidth", 
		   "treeViewColumnGetFixedWidth", 
		   "treeViewColumnGetWidth", 
		   "treeViewColumnSetSizing", 
		   "treeViewColumnSetResizable", 
		   "treeViewColumnGetResizable", 
		   "treeViewColumnGetVisible", 
		   "treeViewColumnGetSpacing", 
		   "treeViewColumnSetSpacing", 
		   "treeViewColumnSetCellDataFunc", 
		   "treeViewColumnClearAttributes", 
		   "treeViewColumnSetVisible", 
		   "treeViewColumnSetAttributes", 
		   "treeViewColumnAddAttribute", 
		   "treeViewColumnGetCellRenderers", 
		   "treeViewColumnClear", 
		   "treeViewColumnPackEnd", 
		   "treeViewColumnPackStart", 
		   "treeViewColumnNewWithAttributes", 
		   "treeViewColumnNew", 
		   "treeViewColumnGetType", 
		   "treeViewColumnGetAlignment", 
		   "treeViewColumnGetSizing", 
		   "treeViewColumnSizingGetType"]}
	 ,
	 {class="GtkTypeInfo",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkVBox",
	  ancestor="GtkBox",
	  methods=[
		   "vboxNew", 
		   "vboxGetType"]}
	 ,
	 {class="GtkVButtonBox",
	  ancestor="GtkButtonBox",
	  methods=[
		   "vbuttonBoxSetLayoutDefault", 
		   "vbuttonBoxGetLayoutDefault", 
		   "vbuttonBoxSetSpacingDefault", 
		   "vbuttonBoxGetSpacingDefault", 
		   "vbuttonBoxNew", 
		   "vbuttonBoxGetType"]}
	 ,
	 {class="GtkVPaned",
	  ancestor="GtkPaned",
	  methods=[
		   "vpanedNew", 
		   "vpanedGetType"]}
	 ,
	 {class="GtkVRuler",
	  ancestor="GtkRuler",
	  methods=[
		   "vrulerNew", 
		   "vrulerGetType"]}
	 ,
	 {class="GtkVScale",
	  ancestor="GtkScale",
	  methods=[
		   "vscaleNewWithRange", 
		   "vscaleNew", 
		   "vscaleGetType"]}
	 ,
	 {class="GtkVScrollbar",
	  ancestor="GtkScrollbar",
	  methods=[
		   "vscrollbarNew", 
		   "vscrollbarGetType"]}
	 ,
	 {class="GtkVSeparator",
	  ancestor="GtkSeparator",
	  methods=[
		   "vseparatorNew", 
		   "vseparatorGetType"]}
	 ,
	 {class="GtkViewport",
	  ancestor="GtkBin",
	  methods=[
		   "viewportGetShadowType", 
		   "viewportSetShadowType", 
		   "viewportSetVadjustment", 
		   "viewportSetHadjustment", 
		   "viewportGetVadjustment", 
		   "viewportGetHadjustment", 
		   "viewportNew", 
		   "viewportGetType"]}
	 ,
	 {class="GtkWidget",
	  ancestor="GtkObject",
	  methods=[
		   "widgetClassPath", 
		   "widgetPath", 
		   "widgetResetShapes", 
		   "widgetShapeCombineMask", 
		   "widgetGetDefaultDirection", 
		   "widgetSetDefaultDirection", 
		   "widgetGetDirection", 
		   "widgetSetDirection", 
		   "widgetGetDefaultVisual", 
		   "widgetGetDefaultColormap", 
		   "widgetGetDefaultStyle", 
		   "widgetSetDefaultColormap", 
		   "widgetStyleGet", 
		   "widgetStyleGetProperty", 
		   "widgetClassListStyleProperties", 
		   "widgetClassFindStyleProperty", 
		   "widgetClassInstallStylePropertyParser", 
		   "widgetClassInstallStyleProperty", 
		   "widgetPopColormap", 
		   "widgetPopCompositeChild", 
		   "widgetPushCompositeChild", 
		   "widgetPushColormap", 
		   "widgetResetRcStyles", 
		   "widgetSetCompositeName", 
		   "widgetRenderIcon", 
		   "widgetCreatePangoLayout", 
		   "widgetGetPangoContext", 
		   "widgetCreatePangoContext", 
		   "widgetModifyFont", 
		   "widgetModifyBase", 
		   "widgetModifyText", 
		   "widgetModifyBg", 
		   "widgetModifyFg", 
		   "widgetGetModifierStyle", 
		   "widgetModifyStyle", 
		   "widgetGetStyle", 
		   "widgetEnsureStyle", 
		   "widgetSetStyle", 
		   "widgetHideOnDelete", 
		   "widgetTranslateCoordinates", 
		   "widgetIsAncestor", 
		   "widgetGetPointer", 
		   "widgetGetEvents", 
		   "widgetSetColormap", 
		   "widgetGetAccessible", 
		   "widgetGetClipboard", 
		   "widgetGetSettings", 
		   "widgetGetRootWindow", 
		   "widgetGetDisplay", 
		   "widgetHasScreen", 
		   "widgetGetScreen", 
		   "widgetGetVisual", 
		   "widgetGetColormap", 
		   "widgetGetAncestor", 
		   "widgetGetToplevel", 
		   "widgetGetExtensionEvents", 
		   "widgetSetExtensionEvents", 
		   "widgetAddEvents", 
		   "widgetSetEvents", 
		   "widgetSetUsize", 
		   "widgetSetUposition", 
		   "widgetGetSizeRequest", 
		   "widgetSetSizeRequest", 
		   "widgetChildFocus", 
		   "widgetGetParentWindow", 
		   "widgetGetParent", 
		   "widgetGetChildVisible", 
		   "widgetSetChildVisible", 
		   "widgetSetParentWindow", 
		   "widgetSetParent", 
		   "widgetSetRedrawOnAllocate", 
		   "widgetSetDoubleBuffered", 
		   "widgetSetAppPaintable", 
		   "widgetSetSensitive", 
		   "widgetSetState", 
		   "widgetGetName", 
		   "widgetSetName", 
		   "widgetGrabDefault", 
		   "widgetGrabFocus", 
		   "widgetIsFocus", 
		   "widgetThawChildNotify", 
		   "widgetChildNotify", 
		   "widgetFreezeChildNotify", 
		   "widgetRegionIntersect", 
		   "widgetIntersect", 
		   "widgetReparent", 
		   "widgetSetScrollAdjustments", 
		   "widgetActivate", 
		   "widgetSendExpose", 
		   "widgetEvent", 
		   "widgetMnemonicActivate", 
		   "widgetListAccelClosures", 
		   "widgetSetAccelPath", 
		   "widgetRemoveAccelerator", 
		   "widgetAddAccelerator", 
		   "widgetGetChildRequisition", 
		   "widgetSizeAllocate", 
		   "widgetSizeRequest", 
		   "widgetDraw", 
		   "widgetQueueResize", 
		   "widgetQueueClearArea", 
		   "widgetQueueClear", 
		   "widgetQueueDrawArea", 
		   "widgetQueueDraw", 
		   "widgetUnrealize", 
		   "widgetRealize", 
		   "widgetUnmap", 
		   "widgetMap", 
		   "widgetHideAll", 
		   "widgetShowAll", 
		   "widgetHide", 
		   "widgetShowNow", 
		   "widgetShow", 
		   "widgetUnparent", 
		   "widgetSet", 
		   "widgetDestroyed", 
		   "widgetDestroy", 
		   "widgetUnref", 
		   "widgetRef", 
		   "widgetNew", 
		   "widgetGetType", 
		   "widgetHelpTypeGetType", 
		   "widgetFlagsGetType", 
		   "widgetGetCompositeName"]}
	 ,
	 {class="GtkWidgetAuxInfo",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkWidgetShapeInfo",
	  ancestor="GtkOzBase",
	  methods=[]}
	 ,
	 {class="GtkWindow",
	  ancestor="GtkBin",
	  methods=[
		   "windowTypeGetType", 
		   "windowPositionGetType", 
		   "windowAddEmbeddedXid", 
		   "windowRemoveEmbeddedXid", 
		   "windowGroupRemoveWindow", 
		   "windowGroupAddWindow", 
		   "windowGroupNew", 
		   "windowGroupGetType", 
		   "windowReshowWithInitialSize", 
		   "windowParseGeometry", 
		   "windowGetPosition", 
		   "windowMove", 
		   "windowGetSize", 
		   "windowResize", 
		   "windowGetDefaultSize", 
		   "windowSetDefaultSize", 
		   "windowSetPolicy", 
		   "windowBeginMoveDrag", 
		   "windowBeginResizeDrag", 
		   "windowUnfullscreen", 
		   "windowFullscreen", 
		   "windowUnmaximize", 
		   "windowMaximize", 
		   "windowUnstick", 
		   "windowStick", 
		   "windowDeiconify", 
		   "windowIconify", 
		   "windowPresent", 
		   "windowGetMnemonicModifier", 
		   "windowSetMnemonicModifier", 
		   "windowMnemonicActivate", 
		   "windowRemoveMnemonic", 
		   "windowAddMnemonic", 
		   "windowListToplevels", 
		   "windowGetModal", 
		   "windowSetModal", 
		   "windowSetAutoStartupNotification", 
		   "windowSetDefaultIconFromFile", 
		   "windowGetDefaultIconList", 
		   "windowSetDefaultIconList", 
		   "windowGetIcon", 
		   "windowSetIconFromFile", 
		   "windowSetIcon", 
		   "windowGetIconList", 
		   "windowSetIconList", 
		   "windowGetDecorated", 
		   "windowSetDecorated", 
		   "windowGetFrameDimensions", 
		   "windowSetFrameDimensions", 
		   "windowGetHasFrame", 
		   "windowSetHasFrame", 
		   "windowGetScreen", 
		   "windowSetScreen", 
		   "windowSetGeometryHints", 
		   "windowGetGravity", 
		   "windowSetGravity", 
		   "windowGetResizable", 
		   "windowSetResizable", 
		   "windowGetDestroyWithParent", 
		   "windowSetDestroyWithParent", 
		   "windowGetSkipPagerHint", 
		   "windowSetSkipPagerHint", 
		   "windowGetSkipTaskbarHint", 
		   "windowSetSkipTaskbarHint", 
		   "windowGetTypeHint", 
		   "windowSetTypeHint", 
		   "windowGetTransientFor", 
		   "windowSetTransientFor", 
		   "windowActivateDefault", 
		   "windowSetDefault", 
		   "windowGetFocus", 
		   "windowSetFocus", 
		   "windowActivateFocus", 
		   "windowSetPosition", 
		   "windowRemoveAccelGroup", 
		   "windowAddAccelGroup", 
		   "windowGetRole", 
		   "windowSetRole", 
		   "windowSetWmclass", 
		   "windowGetTitle", 
		   "windowSetTitle", 
		   "windowNew", 
		   "windowGetType"]}
	 ,
	 {class="GtkWindowGroup",
	  ancestor="GtkOzBase",
	  methods=[
		   "windowGroupRemoveWindow", 
		   "windowGroupAddWindow", 
		   "windowGroupNew", 
		   "windowGroupGetType"]}
	 ]

    fun cvtGtkName s = if String.isPrefix "GTK_" s then
			    String.extract(s, 4, NONE)
			else if String.isPrefix "Gtk" s then
			    if String.isPrefix "GtkVBox" s then
				"vbox"^String.extract(s,7,NONE)
			    else if String.isPrefix "GtkHBox" s then
				"hbox"^String.extract(s,7,NONE)
			    else
				(Char.toString(Char.toLower(String.sub(s,3)))^
				 String.extract(s,4,NONE))
			else s

    fun lookup c nil = NONE
      | lookup c ({class=class,ancestor=ancestor,methods=methods}::db) =
	if c=class then SOME (ancestor, methods)
	else lookup c db

    fun getMethod(class,method) =
	case lookup class db of
	    NONE => NONE
	  | SOME (ancestor, methods) =>
	    let
		val realmethod = (cvtGtkName class)^method
	    in
		if List.contains methods realmethod then
		    SOME realmethod
		else
		    getMethod(ancestor,method)
	    end
end
