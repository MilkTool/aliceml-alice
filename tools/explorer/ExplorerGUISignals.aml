(*
 * This is a generated file, created by alice-glade.
 * Modifications may get lost.
 *)


import structure Gtk from "x-alice:/lib/gtk/Gtk"

import structure Url from "x-alice:/lib/system/Url"

import structure ExplorerGUI from "ExplorerGUI"

signature EXPLORERGUISIGNALS_SIG =
  sig
    val on_save_activate : Gtk.callback_function
    val on_save_as_activate : Gtk.callback_function
    val on_cancel_search_activate : Gtk.callback_function
    val on_reset_activate : Gtk.callback_function
    val on_quit_activate : Gtk.callback_function
    val on_unhide_activate : Gtk.callback_function
    val on_unhide_all_activate : Gtk.callback_function
    val on_hide_failed_activate : Gtk.callback_function
    val on_next_solution_activate : Gtk.callback_function
    val on_next_n_solutions_activate : Gtk.callback_function
    val on_all_solutions_activate : Gtk.callback_function
    val on_view_activate : Gtk.callback_function
    val on_about_activate : Gtk.callback_function
    val on_zoom_to_fit_clicked : Gtk.callback_function
    val on_scale_value_changed : Gtk.callback_function
  end

functor ExplorerGUISignals(structure S : EXPLORERGUISIGNALS_SIG) =
  struct
    val save_on_save_activate = Gtk.signalConnect(ExplorerGUI.save, "activate",S.on_save_activate)
    val save_as_on_save_as_activate = Gtk.signalConnect(ExplorerGUI.save_as, "activate",S.on_save_as_activate)
    val cancel_search_on_cancel_search_activate = Gtk.signalConnect(ExplorerGUI.cancel_search, "activate",S.on_cancel_search_activate)
    val reset_on_reset_activate = Gtk.signalConnect(ExplorerGUI.reset, "activate",S.on_reset_activate)
    val quit_on_quit_activate = Gtk.signalConnect(ExplorerGUI.quit, "activate",S.on_quit_activate)
    val hidenodes_on_unhide_activate = Gtk.signalConnect(ExplorerGUI.hidenodes, "activate",S.on_unhide_activate)
    val unhide_all_on_unhide_all_activate = Gtk.signalConnect(ExplorerGUI.unhide_all, "activate",S.on_unhide_all_activate)
    val hide_failed_on_hide_failed_activate = Gtk.signalConnect(ExplorerGUI.hide_failed, "activate",S.on_hide_failed_activate)
    val next_solution_on_next_solution_activate = Gtk.signalConnect(ExplorerGUI.next_solution, "activate",S.on_next_solution_activate)
    val next_n_solutions_on_next_n_solutions_activate = Gtk.signalConnect(ExplorerGUI.next_n_solutions, "activate",S.on_next_n_solutions_activate)
    val all_solutions_on_all_solutions_activate = Gtk.signalConnect(ExplorerGUI.all_solutions, "activate",S.on_all_solutions_activate)
    val view1_on_view_activate = Gtk.signalConnect(ExplorerGUI.view1, "activate",S.on_view_activate)
    val about_on_about_activate = Gtk.signalConnect(ExplorerGUI.about, "activate",S.on_about_activate)
    val zoomToFit_on_zoom_to_fit_clicked = Gtk.signalConnect(ExplorerGUI.zoomToFit, "clicked",S.on_zoom_to_fit_clicked)
    val scale_on_scale_value_changed = Gtk.signalConnect(ExplorerGUI.scale, "value_changed",S.on_scale_value_changed)
    val aliceexplorer_on_quit_activate = Gtk.signalConnect(ExplorerGUI.aliceexplorer, "delete-event",S.on_quit_activate)
  end

(* Created by alice-glade *)
